{"text":{"0":"#digest July-August, 2022\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0f`engine::io::WritableBase` and `engine::io::RwBase`, thanks to [Stas Zvyagin](https:\/\/github.com\/szvyagin-gj) for the idea.\n\n\u25ab\ufe0f`components::TcpAcceptorBase` with new tutorials [TCP half-duplex server with static configs validation](https:\/\/userver.tech\/d1\/d1a\/md_en_userver_tutorial_tcp_service.html) and [TCP full-duplex server with metrics and Spans](https:\/\/userver.tech\/de\/df7\/md_en_userver_tutorial_tcp_full.html), thanks to [Stas Zvyagin](https:\/\/github.com\/szvyagin-gj) for the idea and [usage samples](https:\/\/github.com\/szvyagin-gj\/unetwork)\n\n\u25ab\ufe0fCryptoPP version download during CryptoPP installation, thanks to [Konstantin](https:\/\/github.com\/Nybik) for the PR\n\n\u25ab\ufe0fmore documentation on Non FIFO queues, thanks to [Ivan Trofimov ](https:\/\/github.com\/itrofimow)for the report\n\n\u25ab\ufe0fmissing `std::atomic` into `TaskProcessor`, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the report\n\n\u25ab\ufe0fFedora 36 support, thanks to [Benjamin Conlan](https:\/\/github.com\/bjconlan) for the PR\n\n\u25ab\ufe0f`server::handlers::HttpHandlerStatic` [handler to serve static pages](https:\/\/userver.tech\/dd\/d88\/classserver_1_1handlers_1_1HttpHandlerStatic.html)\n\n\u25ab\ufe0f [vector versions](https:\/\/userver.tech\/dd\/dcf\/classengine_1_1io_1_1Socket.html#a0bd51bad966cc32e4827844d255d4e0e) of `engine::io::Socket::SendAll` and used to optimize CPU and memory consumption during HTTP response sends\n\n\u25ab\ufe0f`Task processors` now have an os-scheduling static config option and a [usage guide](https:\/\/userver.tech\/db\/dd2\/md_en_userver_task_processors_guide.html)","1":"","2":"yes","3":"guess this is the missing part https:\/\/userver.tech\/de\/da8\/pg_enum.html","4":"Please see `userver\/samples\/postgres_auth` - in particular, `...\/tests\/conftest.py`","5":"We currently don't allow automatically falling back to the fallback config, because the configs there could be outdated or mostly testsuite-oriented, since our devs are so used to working with dynamic configs through the frontend for the dynconf service\n\nWe could add a switch to `dynamic-config-client-updater` to allow that. Please create an issue if that's important for you","6":"By the way, is there any example in the code of how to use dynconf service? I'm struggling to find any code that would show me how to set up main app or how to parse multiple keys.\nAlso are dynamic configs that are special for uservice (like `USERVER_NO_LOG_SPANS`) automatically handled if there is a dynamic config component created?","7":"may be some combination of `prefix=True` or `regex=True` in conjunction with this\nhttps:\/\/yandex.github.io\/yandex-taxi-testsuite\/mockserver\/#magic-args\ndoes the trick, but i haven't checked","8":"I'll have to try that myself","9":"If you have many microservices in different repositories, having userver as a submodule\/ExternalProject for all of those microservices sounds like a madness. It is strange that it's not meant to be \"installable\" to be honest","10":"And yes I want to build this test_package to be able to apply the same technique for my projects. Not sure what you really mean","11":"Hey folks, wanted to contribute but I didn't find a guide or rules for that.\nDo you have some guidelines?","12":"Do you plan to make it an oss project? Finding bugs in the project will make the project more secure.\n\nhttps:\/\/github.com\/google\/oss-fuzz","13":"Please try this https:\/\/pastebin.com\/rfC02q8i","14":"please add string in cmake\/FindPython.cmake\nin 5 line   `set(PYTHON \"\/usr\/local\/bin\/python3\")`","15":"Wen windows","16":"The client RPC object will throw\n`<userver\/ugrpc\/client\/exceptions.hpp>`","17":"> writing docs\nYou meant writing JSON serialization code?","18":"make all, also give me this error","19":"yes, same syntax error with the introspect()","20":"Yep, it is","21":"so I needed this","22":"It worked before the userver update","23":"Any adieas, how can we simplify somehow the troubleshooting of such cases?","24":"Hi, I want to run the samples \"Writing your first HTTP server\", and when building hte code, it alaways shows errors","25":"Yes, setting an a dynconf-service and adjusting some values in consumers static_config.yaml should be it\n\nYou are welcome, feel free to reach out if something doesn't go as expected","26":"Good points.","27":"#digest January, 2023\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0fTo aid in asynchronous drivers development the [engine::io::FdPoller](https:\/\/userver.tech\/d9\/d75\/classengine_1_1io_1_1FdPoller.html) is now a part of the public API\n\n\u25ab\ufe0fAdded a blazing fast [utils::TrivialBiMap](https:\/\/userver.tech\/d9\/dbf\/classutils_1_1TrivialBiMap.html)\n\n\u25ab\ufe0fHTTP Streaming is now considered production ready\n\n\u25ab\ufe0fAdded `ToStringView(HttpMethod) `function, thanks to [Fedor Barkov](https:\/\/github.com\/hitsedesen)\n\n\u25ab\ufe0fAdded more [engine::Yield](https:\/\/userver.tech\/dc\/d3f\/namespaceengine.html#a142b0ca27e383ae38f52cac01692a8d0) tests, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) \n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fUnknown\/mistyped values in static configs are now reported by default. [Static configs validation ](https:\/\/userver.tech\/d2\/d66\/md_en_userver_component_system.html#static-configs-validation)now could use minimum and maximum\n\n\u25ab\ufe0fgRPC clients now have `ReadAsync()` functions, that return a future and allow to request multiple results from different RPCs at the same moment\n\n\u25ab\ufe0f  [ugrpc::server::Server](https:\/\/userver.tech\/d9\/d55\/classugrpc_1_1server_1_1Server.html) now can return a vector of gRPC service names\n\n\u25ab\ufe0fTestsuite fixtures were improved:\n\n- Fixtures for detecting service readiness now work out of the box for services without [server::handlers::Ping](https:\/\/userver.tech\/d7\/d6d\/classserver_1_1handlers_1_1Ping.html) \n\n- Known databases do no not require manual dependency registration any more\n\n- Improved usage experience and testing of Metrics, see [Testsuite metrics testing](https:\/\/userver.tech\/d1\/dd6\/md_en_userver_functional_testing.html#TESTSUITE_METRICS_TESTING)\n\n- Added fixtures to work with cache dumps\n\n- [service_secdist_path](https:\/\/userver.tech\/dc\/db7\/group__userver__testsuite__fixtures.html#ga48081e70f90a1492e771e783fa5f2ce9) and `--service-secdist` options simplify setup of the [components::Secdist](https:\/\/userver.tech\/da\/dc7\/classcomponents_1_1Secdist.html) in tests\n\n- Many fixtures were documented at [Fixtures](https:\/\/userver.tech\/dc\/db7\/group__userver__testsuite__fixtures.html), pytest plugins were documented in tutorials and at [Functional service tests (testsuite)](https:\/\/userver.tech\/d1\/dd6\/md_en_userver_functional_testing.html)\n\n\u25ab\ufe0fMetrics:\n\n- New interface for writing metrics [utils::statistics::Writer](https:\/\/userver.tech\/d7\/dd9\/classutils_1_1statistics_1_1Writer.html) is now considered stable\n\n- More metrics were moved to a faster [utils::statistics::Writer](https:\/\/userver.tech\/d7\/dd9\/classutils_1_1statistics_1_1Writer.html), including [utils::statistics::MetricTag](https:\/\/userver.tech\/d7\/d33\/classutils_1_1statistics_1_1MetricTag.html)\n\n- More metrics for Redis\n\n- More tests for metrics\n\n\u25ab\ufe0fFreeBSD build fixes\n\n\u25ab\ufe0fMultiple documentation and diagnostics improvements\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0fNow the engine does less random number generator invocations for HTTP handling\n\n\u25ab\ufe0fLogging of [tracing::Span](https:\/\/userver.tech\/d7\/d1a\/classtracing_1_1Span.html) became x2 faster\n\n\u25ab\ufe0f`IntrusiveMpscQueue` is now used for engine internals, IO operations now schedule faster\n\n\u25ab\ufe0fWriting HTTP headers became faster, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow)\n\n\u25ab\ufe0f [utils::TrivialBiMap](https:\/\/userver.tech\/d9\/dbf\/classutils_1_1TrivialBiMap.html) is now used wherever it is possible","28":"Using environment variables in yaml configs is really killer. Before I had to do tricks with CMakeLists to inject environment variables into my configs","29":"Can you pls create an issue at github?","30":"Hello I try use pg_grpc_service_template create project, but when I run make build, I got this error","31":"#digest July, 2023\n\n\ud83c\udd95 **New features:\n\n**\u25ab\ufe0f[server::http::CustomHandlerException](https:\/\/userver.tech\/d7\/d7f\/classserver_1_1handlers_1_1CustomHandlerException.html) now allows to provide a custom HTTP status that is not mapped to protocol-agnostic [server::handlers::HandlerErrorCode](https:\/\/userver.tech\/d2\/d24\/namespaceserver_1_1handlers.html#ab868a1e6cf573e2728f59d318078e265).\n\u25ab\ufe0fNon-coroutine `userver-universal` CMake target was refactored and is now used by the whole framework as a basic dependency. Compile times dropped down drastically for building the whole framework from scratch.\n\u25ab\ufe0fAdded a non-coroutine usage example \"[Non-Coroutine Console Tool](https:\/\/userver.tech\/df\/db6\/md_en_userver_tutorial_json_to_yaml.html)\"\n\u25ab\ufe0fIt is now possible to subscribe to `SIGUSR` and `SIGUSR` in the same class. Thanks to [Beshkent](https:\/\/github.com\/Beshkent) for the bug report.\n\u25ab\ufe0fDynamic config management commands were added to `uct` tool.\n\u25ab\ufe0fCleaned up and added docs for [redis::CommandControl](https:\/\/userver.tech\/d2\/ded\/structredis_1_1CommandControl.html).","32":"Ok, thank you)","33":"Can this help by any chance?\nhttps:\/\/stackoverflow.com\/q\/53934591\/5173839","34":"Oh no","35":"Ok here is what I tried.\nI cloned the pg_grpc_service_template from scratch.\nI did\n\n```cd third_party\/userver\ngit checkout develop\ngit pull\ncd ..\/..\/\ngit add .\ngit commit -m\"update userver\"\nrm Makefile.local\nmake docker-cmake-debug\n\n```An error occured during the cmake like before: `Invalid Protobuf package`","36":"It's on the roadmap I believe","37":"Hi again.\nSo, I am trying this approach, but in the tests I am getting this error:\n```2: ERROR    [POST \/v1\/handler] Bad URL, curl error: Unsupported protocol, url: mockserver\/add_group\/```\n\nWhat am I doing wrong?\nOne note is that I don't patch the config as I have separate `config_vars` for it.\nThanks!","38":"Are most people writing queries like this or is anyone using an ORM on top of the Postgres driver?","39":"Hey, it does not at the moment.","40":"You can read Dockerfile here\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/scripts\/docker\/Dockerfile","41":"Could anyone help me please \uff1f","42":"Hello everyone!\nIf I want to map jsonb type from postgres db, should I use `userver::storages::postgres::PlainJson` ?","43":"We know about it, this task has low priority as of now","44":"Especially when you can't find it in the docs","45":"Ok, thanks!\nAnd to make it actually work I need to add the component like this?\n\n```auto component_list =\n      userver::components::MinimalServerComponentList()\n           .Append<userver::components::DynamicConfig>\n\/\/...```","46":"Out of curiosity, why is there no support for \"Async HTTPS server\"? I am technically curious, I think you are using nginx as a solution.\n\nhttps:\/\/userver.tech\/d7\/dca\/md_en_userver_framework_comparison.html","47":"\ud83e\uddd0not work","48":"For example, for HTTP in conftest.py I can just say\n\n```@pytest.fixture(autouse=True)\ndef mock_service(mockserver):\n    @mockserver.json_handler('\/do_something')\n``` \nAnd it will be applied for every test.\nIs it possible to do something like that for mocking grpc?","49":"same result","50":"Something like this?\nhttps:\/\/pastebin.com\/3BYwTWJv","51":"You should not just break it like this","52":"Silly question. How do I apply the patch? `Patch` cannot find files for some reason and `git apply` just does not do anything (before it showed error at least)","53":"I would tag the build; Something like:\n\n`docker tag USERVER_BUILT_CONTAINER_ID_HERE my_userver:v0.1`\n\nThen make my own Dockerfile and include it in the source dir of \"my app\".\n\nThe Dockerfile uses that pre-built image tag (`my_userver:v0.1` in the example above) so that instead of having to build userver all over again we just re-use the tagged build.\n\nFROM my_userver:v0.1\nRUN mkdir -p build && cd build && cmake ..\n\nCMD [\"bash\"]","54":"I think the mapped types are more for the opposite direction (mapping DB rows into C++ objects)","55":"Hello. I want to compile and run core tests in Configure and Build. But I am getting error. OS: ubuntu:22.04","56":"@heemike do you still have this patch applied? Does userver build without it?","57":"If I do I'll post the results\/findings here of course","58":"In case this helps anyone else:\n\nOn my test environment I did not have [rootless mode](https:\/\/docs.docker.com\/engine\/security\/rootless\/), so running most docker commands required root access.   That being said, despite not having rootless mode, I was still able to make the uServer docker process work through the following.\n\n\n\n```# as regular user\nmkdir -p \/opt\/userver-build\ncd \/opt\/userver-build\ngit clone https:\/\/github.com\/userver-framework\/userver\n\nsu root\n#### Remaining commands are all run as root:\ncd \/opt\/userver-build\/userver\n\n# Build commands below came from: https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#docker\n\n# This command took 3m58s on my testing env.\ntime docker-compose run --rm userver-debian bash -c 'cmake $CMAKE_OPTS -B.\/build -S.\/'\n\n# This command took about 19m on my testing env.\ntime docker-compose run --rm userver-debian bash -c 'cd \/userver\/build && make -j $(nproc)'\n\n# This command took about 6m on my testing env.\ntime docker-compose run --rm userver-debian bash -c 'cd \/userver\/build && ctest -V'\n\n\n```Basically, the 'secret' was not cloning the repo as root, because the `docker-compose` scripts bind the repo dir as a volume in the docker containers, and the scripts that are run expect the files (e.g., the bound contents of the repository) to not be owned by root.","59":"Spawn the tasks, put them in a vector, then `engine::GetAll`. It rethrows the first thrown exception, if any","60":"This sounds waay off.\n\nIt takes me ~10min to build userver in Release + LTO (with all the tools, samples, tests & benchmarks) from scratch on a fresh 12cores\/24Ram VM\nhttps:\/\/pastebin.com\/raw\/mzrrB1hz\n\nAnd it takes ~15min to build a userver-based app in github CI (which is like 1 or 2 cores at most), as can be seen here for example https:\/\/github.com\/TechEmpower\/FrameworkBenchmarks\/actions\/runs\/3804500294\/jobs\/6471759944#step:9:1821\n\nSanity check: did you use parallel build? If not i highly recommend you to, if you did there's likely something wrong in your setup","61":"Do i understand correctly, that in the following situation:\n1. Service works\n2. Then it breaks for whatever reason\n3. Dynconf service breaks for whatever reason\n\nService is able to restart and fallback to some caches, even if Dynconf is unavailable?","62":"That's why I mentioned devcontainers earlier.\n\nOne image for your devcontainer; another for your prod.","63":"`GrpcTargets.cmake:12`\n`Protobuf_INCLUDE_DIRS -> Protobuf_INCLUDE_DIR`\n\nShould be enough","64":"Do we know how far we are from declaring `userver` as having the first stable release?","65":"RabbitMQ\/AMQP [experimental support](https:\/\/userver.tech\/dd\/de2\/rabbitmq_driver.html) was added, thanks to Ivan Trofimov.\n\nWe'd appreciate feedback :)","66":"#digest November, 2022\n\n\ud83c\udd95**Added:**\n\n\ud83d\udc19 userver is the part of [The Yandex Bug Bounty](https:\/\/yandex.com\/bugbounty\/index) program. To report a potential vulnerability or weakness in userver please send the details about it to [report](https:\/\/yandex.com\/bugbounty\/i\/report\/) or to security@yandex-team.ru\n\n\u25ab\ufe0f [engine::SingleWaitingTaskMutex](https:\/\/userver.tech\/d8\/dd4\/classengine_1_1SingleWaitingTaskMutex.html) was added, many thanks to [Denis Korovyakovskiy](https:\/\/github.com\/den818) for the PR\n\n\u25ab\ufe0fOn-disk dumps were implemented for the LRU caches, many thanks to [Roman Guryanov](https:\/\/github.com\/YaImedgar) and [wyr241](https:\/\/github.com\/wyr241) for the PR\n\n\u25ab\ufe0fIntroduce metrics for ev-threads CPU load, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0fAdded gRPC testsuite mock sample at [gRPC client and service](https:\/\/userver.tech\/dd\/d4c\/md_en_userver_tutorial_grpc_service.html)\n\n\u25ab\ufe0fAdded [engine::TaskCancellationToken](https:\/\/userver.tech\/d0\/db5\/classengine_1_1TaskCancellationToken.html) to simplify async drivers development\n\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fImproved support for Conan packaging, many thanks to [Anton](https:\/\/github.com\/Jihadist) for the PR\n\n\u25ab\ufe0fFixed GCC build, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0fFixed [formats::yaml](https:\/\/userver.tech\/d7\/d72\/namespaceformats_1_1yaml.html) exception message typo, thanks to the [Denis Galeev](https:\/\/github.com\/dengaleev) for the PR\n\n\u25ab\ufe0f [Fixed](https:\/\/userver.tech\/df\/d3a\/md_en_userver_security_changelog.html#cve202228229hashingwasvulnerabletohashdos) the hash functionality in server that allows attackers to cause a denial of service via crafted HTTP request, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for report a vulnerability \n\n\u25ab\ufe0fSimplified build steps, in particular:\n\n  - Added `USERVER_PYTHON_PATH` to specify the path to the python3 binary for use in testsuite tests\n\n  - Conan patches were merged into CMake scripts\n\n  - Channelz support is now detected automatically\n\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0fAMQP optimized, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR","67":"Yes, here are some samples https:\/\/userver.tech\/d1\/dd6\/md_en_userver_functional_testing.html#directrun","68":"Thank you. This is what I needed!\nAnd if I have this `struct MyValue`, can I also use it to insert the value into the pg database, mapping the `body` from the request to `MyValue`?","69":"Actually now when I did remove the mapping for `MyGroup` (not for another type I had for testing), I am getting a static assertion error:\n\n```\/home\/user\/workdir\/third_party\/userver\/postgresql\/include\/userver\/storages\/postgres\/detail\/query_parameters.hpp:58:48: error: static assertion failed: Type doesn't have mapping to Postgres type.```","70":"Please try\n`-DPython3_EXECUTABLE=\/usr\/local\/bin\/python3`\ninstead of the patch","71":"You could build the UServer framework in docker and tag and push that build to your own registry if needed and then extend from this for your own apps","72":"Comparing to Python:\n```for key, value in some_json.items():\n   # do something with key```","73":"If you start both up and then bash into container 1 (e.g., serviceone) you should be able to `ping servicetwo` because they're both connected to the same external network","74":"Hi everyone.\nCould you please guide me, which config is responsible for response timeout? Let's say if there's a request and a service is processing it more than N seconds, I want to stop processing it in the service and response with timeout error.","75":"Include `UserverTestsuite.cmake` as well","76":"Hi there!\nI'm playing with `pg_service_template` project and wasn't able to read `bytea` field from database:\n\ntext=exception in 'handler-binary' handler in handle_request: Query result set field `binary_data` doesn't have a parser. Type oid is 17 (userver::storages::postgres::UnknownBufferCategory)\n\nobjdump shows that executable has no mentions of `PgToCppPredefined<(PredefinedOids)17, std::string>` while `libuserver-postgresql.a` has. How to add this static registrator to executable?","77":"https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/cmake\/FindPython.cmake","78":"(Is it possible, though? Anyway that's something to consider)","79":"Yes. You'll still need HTTP server for the tests-control handler, there is currently no gRPC implementation for that","80":"Please post the cmake stdout again","81":"The point here is not to enumerate all values for insertion, but having them just mapped automatically, because in a real case I have much more columns actually","82":"","83":"my understanding is that `kMyConfig` is no more than a typesafe way to operate on what is basically a json\n\nSo yes, your example should work, or you could parse both fields into some struct with a single key","84":"yes, there is a draft PR with Conan","85":"I just followd by this document","86":"Thank you!","87":"Another question.\nIf I respond with error like \n```call.FinishWithError(grpc::Status(grpc::StatusCode::UNAUTHENTICATED, \"not found\"));\n```How can I test that the failure is expected?","88":"and please install packages:\n```brew install boost \\\n  ccache \\\n  clang-format-9 \\\n  cmake \\\n  coreutils \\\n  curl \\\n  flatbuffers \\\n  fmt \\\n  git \\\n  grpc-python37 \\\n  hiredis \\\n  http-parser \\\n  jemalloc \\\n  libev \\\n  libiconv \\\n  openssl \\\n  postgres \\\n  protobuf-python37 \\\n  cctz \\\n  rapidjson```","89":"Yes it is, but I cannot understand how to get a key from a value","90":"Probably the `volumes` folder that is referenced by docker was created from root. Change the permissions for folder (and do not run commands as root if there's a way to avoid that :)","91":"client needs `name`, you can pass arbitrary string as a name\nwe'll fix the template","92":"You could find some information on queries in logs. There's also a bunch of per-query metrics. The latter are useful for finding slow queries and improving performance","93":"So the syntax error is actually the error in the query exactly as it's writter. I can't comprehend why tho","94":"It's useful to report an issue regardless of whether it's known internally, because OSS issues are typically given a higher priority all things being equal","95":"see in the screenshot, there is a problem with the rights to access the file\nyou have edited the docker-compose.yaml file?","96":"Hello everyone!\nDoes userver have serializer\/parser for `postgres::ByteaWrapper` ?","97":"I assume \"non threadsafe\" means that it captures `thread_local` vars across suspension points","98":"Oh, thank you, I will try","99":"Hello everyone!\nDoes userver have wss support?","100":"```@pytest.fixture(autouse=True)\ndef greeter_mock(mock_grpc_greeter, my_fixture_deps):\n    @mock_grpc_greeter('SayHello')\n    async def _mock_this\n\n    @mock... _mock_that\n\n```You can disable an autouse fixture in \"special\" tests based on custom markers\nhttps:\/\/stackoverflow.com\/questions\/38748257\/disable-autouse-fixtures-on-specific-pytest-marks","101":"","102":"You can run a task with such legacy code on `SingleThreadedTaskProcessors`:\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/4be7843844232b9fd12c128721e32b23b0c88059\/core\/include\/userver\/components\/single_threaded_task_processors.hpp#L32","103":"I see [CONTRIBUTING.md](https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/CONTRIBUTING.md) but this looks more like licensing\/legal rather than practical guidelines on what is expected from outside contributors.","104":"Nope, I tried it. Nothing worked for me except this. But it was long time ago that's why I was thinking you may have fixed this already","105":"I mean userver is not fully ready to be used with Conan yet","106":"it is based on this PR, but several details are different. It uses original http server, so you don't need another port for websockets.","107":"Could you please show your CMakeLists.txt file ? Or just cokpare it with the https:\/\/github.com\/userver-framework\/pg_grpc_service_template\/blob\/develop\/CMakeLists.txt\n\nNote the userver_testsuite_add_simple usage. It does all the job for tests\/ . Here are the docs https:\/\/userver.tech\/df\/d07\/md_en_2userver_2functional__testing.html#autotoc_md217","108":"You can, all you need is a user type mapping:\nhttps:\/\/userver.tech\/d1\/dda\/pg_user_types.html","109":"#digest October, 2022\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0fNow the **\"help wanted\"** issues at Github have additional tags **\"good first issue\"** and **\"big\"**, to help you to choose between a good starting issue and a big feature. See [Issues, feature and pull requests, releases for more info](https:\/\/userver.tech\/d9\/d98\/md_en_userver_development_releases.html)\n\n\u25ab\ufe0fExperimental support for Conan packaging, many thanks to [Anton](https:\/\/github.com\/Jihadist) for the PR\n\n\u25ab\ufe0fPrometheus and Graphite metrics formats were added, see [Service Statistics and Metrics (Prometheus\/Graphite\/...)](https:\/\/userver.tech\/dc\/d6a\/md_en_userver_service_monitor.html) for details\n\n\u25ab\ufe0fInitial support for chaos testing was added, see [Chaos Testing](https:\/\/userver.tech\/d9\/d5d\/md_en_userver_chaos_testing.html) for more info\n\n\u25ab\ufe0fGeneric Escape implementation for ranges was added to clickhouse, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0fTLS\/SSL support for Redis\n\n\u25ab\ufe0fNew handler `server::handlers::OnLogRotate`\n\n\u25ab\ufe0f`gRPC` mockserver support (docs will be updated soon at [gRPC client and service](https:\/\/userver.tech\/dd\/d4c\/md_en_userver_tutorial_grpc_service.html))\n\n \u25ab\ufe0f [components::Logging ](https:\/\/userver.tech\/d4\/da4\/classcomponents_1_1Logging.html)can now output logs to UNIX sockets\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fBetter diagnostics for CoroPool initialization failure, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0f`gRPC` now provides an efficient API for async execution of requests without additional `utils::Async` invocations\n\n\u25ab\ufe0fBuild fixes for older platforms, thanks to [Yuri Bogomolov](https:\/\/github.com\/ybogo) for the PR\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0fMultiple optimizations, including:\n\n- Faster async cancellations for PostgreSQL\n\n- Avoid using `dynamic_cast` in multiple places\n\n- Avoid calling s`td::chrono::steady_clock::now()` in multiple places\n\n\u25ab\ufe0fMultiple optimizations from [Ivan Trofimov](https:\/\/github.com\/itrofimow):\n\n- `utils::datetime::WallCoarseClock` and its usage in the framework core\n\n- HTTP \"Date\" header caching\n\n- Significant reduction of syscalls count during any recv operations\n\n- `Server::GetRequestsView` is not initialized if it is not required\n\n- `utils::encoding::ToHex` became faster\n\n- Marking response as ready became faster","110":"oh this is I use `sudo apt install -y protobuf-compiler` install protoc after I run make build-debug, give me ld Error","111":"How to fix this pls?\n\n```2: ERROR    <userver> Loading failed: Cannot load fallback dynamic config or its overrides: While parsing dynamic config values: Field 'POSTGRES_CONNECTION_PIPELINE_EXPERIMENT' is of a wrong type. Expected: intValue, actual: booleanValue (userver::formats::json::TypeMismatchException) (std::runtime_error)```","112":"Ok. Could you show how you include the userver in your `CMakeLists.txt` project and build against it? As far as I see you have a directory with the build `\/userver\/build`. How exactly do you use this build path in your sources?","113":"Yes by turning off `dynamic-config-client-updater` and turning on `dynamic-config-fallbacks` using `load-enabled`","114":"There is no way to add `session`-scoped testsuite mocks. (It would require a lot of effort from testsuite folks to implement.)\n\nOne way would be to check a flag and either launch a `Task` (or `PeriodicTask`, or whatever), or register a [\"testsuite task\"](https:\/\/userver.tech\/df\/d07\/md_en_2userver_2functional__testing.html#autotoc_md231)","115":"We'll work on fixing up Conan support and putting userver into Conan index now that we have versioning","116":"Ok I realized I can just add any config value in the static_config and get that value from auth_config.","117":"I have monorepo but without the root CMakeLists.txt. It's done so every service can be built using individual make commands (I found it more convenient this way). But even if I had this root CMakeLists, to deploy services I use ansible. And for each service there's a separate playbook. So anyway you have to rebuild everything for each service (same with CI but without ansible ofc). This is why by the way I'm really waiting for that `make install`, so I don't have to rebuild userver always foreach service when deploying","118":"No","119":"https:\/\/github.com\/xuxiaoguang1\/userver-demo","120":"Not sure I think conan is not fully functional as of yet","121":"Not necessary, it goes both ways\n\nPg system types are already mapped out of the box, but user-defined types might be used in selects and in inserts\n\nWhat bothers me here is that MyGroup is mapped to what seems to be a table name; i'm not sure if that works the intended way. And if it does, is it a composite type or a row?","122":"drop this line\nhttps:\/\/github.com\/userver-framework\/pg_service_template\/blob\/develop\/configs\/static_config.yaml.in#L45","123":"On the other hand, if your codebase is in C, then \u0421++ would also suit you :)","124":"Now it's clear that you seems like just don't understand how it works.\nThe point is you won't be able to find userver libraries \/ headers if you use just a build directory instead of submodule. It will just not able to find those without proper `Find<Package>.cmake`. For these purposes an installation of build package must be created.","125":"Yes, this should do the job","126":"ok just remove it?","127":"still showing ' Failed to find brew package version for 'postgresql@14', it must be postgresql@14 ?","128":"I made sure I pulled the latest image because I see it was updated 3 days ago","129":"Ok, thank you!","130":"Now trying this","131":"that's a huge perk","132":"Hello, please, say how docker script your using?\nand write how platform for build? (amd64\/arm64v8\/arm32v7)?","133":"If I recall correctly it should be something like\n\n@mockserver.json_handler('\/example.com\/path')\ndef handler(request: testsuite.utils.http.Request):\n    # Return JSON document\n    return {...}\n    # or call to mockserver.make_response()\n    return mockserver.make_response(...)","134":"The point is that `res.AsSingleRow<MyGroup>` should work out of the box without the CppToUserPg\n\nEither this or i'm heavily outdated","135":"Can you help me again please. I read the documentation of `ExternalProject_Add` but didn't understand how I should pass the `ON\/OFF` options.\nMaybe I should pass some file with options ? Here is my CMakeLists content","136":"We have a roadmap to release https:\/\/userver.tech\/d6\/d38\/md_en_userver_roadmap_and_changelog.html#plansforthefirstrelease\n\nI think we are ~4 months away from release","137":"In the `pgsql_local` fixture, in the case where you only specify `db\/schema.sql`","138":"Yes, also please post the full cmake stdout","139":"just add default values when you read the config and document them in the doc \/ patch notes","140":"The INSERT INTO mytbl ($1) might work with a table with exactly one column.  \n\nIs the expected behaviour that INSERT INTO mapped_object_table ($1) is expanded into the columns for mapped_object and that the  INSERT values will be bound automatically?","141":"WebSockets will be soon, WS-Security won't appear any time soon","142":"It's done","143":"we will be update userver and add dependency in GrpcTargets and you will be can remove this two line","144":"-- Failed to find brew package version for 'postgresql@14'\nCMake Error at \/opt\/homebrew\/Cellar\/cmake\/3.26.3\/share\/cmake\/Modules\/FindPackageHandleStandardArgs.cmake:230 (message):\n  Could not find `PostgreSQL` package.\n\n        Debian: sudo apt update && sudo apt install libpq-dev\n\n        MacOS: brew install postgresql@14\n\n        Fedora: sudo dnf install postgresql-static\n\n        ArchLinux: sudo pacman -S postgresql-libs\n\n        FreeBSD: pkg install postgresql15-client\n\n   (missing: PostgreSQL_LIBRARIES PostgreSQL_INCLUDE_DIRS) (Required is at least version \"12\")\nCall Stack (most recent call first):\n  \/opt\/homebrew\/Cellar\/cmake\/3.26.3\/share\/cmake\/Modules\/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE)\n  build_release\/cmake_generated\/FindPostgreSQL.cmake:73 (find_package_handle_standard_args)\n  third_party\/userver\/postgresql\/pq-extra\/CMakeLists.txt:14 (find_package)","145":"Great! Thank you!","146":"Sorry I see it must be declared in the namespace of the type.\nNow with this code I've got this error:\n```no known conversion for argument 1 from 'const userver::storages::postgres::TypedResultSet<models::MyEnum, userver::storages::postgres::FieldTag>' to 'const models::MyEnum&'```","147":"There are dynamic config caches, though (or should I call it a cache dump?), so if a service restarts, then it will use that","148":"\ud83d\udccc**Optimized internals:\n\n**\u25ab\ufe0f Significant improvements in HTTP handling due to new [http::headers::HeaderMap](https:\/\/userver.tech\/dc\/d2f\/classhttp_1_1headers_1_1HeaderMap.html) usage instead of std::unordered_map.\n\u25ab\ufe0f Improved performance of [utils::TrivialBiMap](https:\/\/userver.tech\/d9\/dbf\/classutils_1_1TrivialBiMap.html) by an order of magnitude for enum-to-enum mappings, thanks to [Vlad Tytskiy](https:\/\/github.com\/Tytskiy) for the bug report!\n\u25ab\ufe0f [utils::FromString](https:\/\/userver.tech\/d6\/d84\/namespaceutils.html#a703c865514d1d674e7bf30c212cb8779) now uses std::from_chars for better performance.\n\u25ab\ufe0f [TESTPOINT](https:\/\/userver.tech\/d9\/d1d\/testpoint_8hpp.html#a8a6d27a839e4327f705ac8d965e4b6e8) and other testpoint related macro now imply zero overhead if testpoints were disabled in static config.\n\u25ab\ufe0f More functions of [formats::json::ValueBuilder](https:\/\/userver.tech\/d2\/daa\/classformats_1_1json_1_1ValueBuilder.html) now accept std::string_view, resulting in less std::string constructions and better performance.\n\u25ab\ufe0f TSKV escaping was optimized via SIMD, resulting in up to x10 speedup on long logs.\n\u25ab\ufe0f `mlock_debug_info` static configuration option of [components::ManagerControllerComponent](https:\/\/userver.tech\/dc\/d21\/classcomponents_1_1ManagerControllerComponent.html) now allows to lock exception unwinding information in memory. It improves responsiveness of the service under heavy load on low memory and bad hard drives.\n\n\n**\ud83d\udcc4 Docs:\n**\u25ab\ufe0fSome metrics were documented, a human-readable format of metrics is now used in documentation. See [Service Statistics and Metrics (Prometheus\/Graphite\/...)](https:\/\/userver.tech\/dc\/d6a\/md_en_userver_service_monitor.html).\n\u25ab\ufe0fCustom [404 page](https:\/\/userver.tech\/df\/d86\/md_en_userver_404.html).\n\u25ab\ufe0fNew pages, including [Frequently Asked Questions](https:\/\/userver.tech\/db\/d50\/md_en_userver_faq.html), [Periodics and DistLocks](https:\/\/userver.tech\/d9\/da4\/md_en_userver_periodics.html) and [Deploy Environment Specific Configurations](https:\/\/userver.tech\/d6\/dd8\/md_en_userver_deploy_env.html).\n\n\n\ud83d\udcbb** Build changes:\n\n**\u25ab\ufe0fArch Linux instructions were improved, thanks to [Kirill Zimnikov](https:\/\/github.com\/lirik90) for the PR!\n\u25ab\ufe0fFixed Conan based builds, thanks to [Anton](https:\/\/github.com\/Jihadist) for the PR.\n\u25ab\ufe0fClickhouse-cpp version was raised to 2.4.0, thanks to [Kirill Zimnikov](https:\/\/github.com\/lirik90) for the PR!\n\u25ab\ufe0fFixed build on libstdc++ from GCC-13, thanks to [Kirill Zimnikov](https:\/\/github.com\/lirik90) for the PR!\n\u25ab\ufe0fFixed benchmarks build on non x86 targets.\n\u25ab\ufe0fRewrite of Protobuf and gRPC locating logic.\n\n\u2014\n[userver news](https:\/\/t.me\/userver_news)","149":"I am not a contributer,  maybe you should wait for a better answer from userver-team =)","150":"Is it possible that something is not installed in the docker image `ghcr.io\/userver-framework\/ubuntu-userver-build-base:v1` ?","151":"Ohh, this is config int.. one moment..\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/samples\/postgres_service\/dynamic_config_fallback.json#L11C37-L11C37\nUse: 0","152":"Hmm,\nI have cleaned up build dir, ccache, updated userver, and now I am getting this error:\n\n```-- dpkg-query: no packages found matching libgrpc-dev\n\n-- Failed to find 'pacman'\n-- Found PkgConfig: \/usr\/bin\/pkg-config (found version \"0.29.2\") \n-- Checking for module 'grpc++'\n--   Package 're2', required by 'grpc', not found\nERRORFailed to find grpc++ via pkg-config\n-- Found UserverGrpc: \/usr\/lib\/libgrpc.so;\/usr\/lib\/libgrpc++.so;\/usr\/lib\/libgpr.so;\/usr\/lib\/x86_64-linux-gnu\/libabsl_synchronization.so  \n-- UserverGrpc include directories: \/usr\/include\n-- UserverGrpc libraries: \/usr\/lib\/libgrpc.so;\/usr\/lib\/libgrpc++.so;\/usr\/lib\/libgpr.so;\/usr\/lib\/x86_64-linux-gnu\/libabsl_synchronization.so\n-- dpkg-query: no packages found matching protoc-dev\n\n-- Checking for module 'protobuf'\n--   Found protobuf, version 3.21.6.0\n-- pkg-config version of protobuf: 3.21.6.0\n-- Found UserverProtobuf: \/usr\/lib\/x86_64-linux-gnu\/libprotobuf.so  \n-- UserverProtobuf include directories: \/usr\/include\n-- UserverProtobuf libraries: \/usr\/lib\/x86_64-linux-gnu\/libprotobuf.so\nCMake Error at \/home\/user\/workdir\/third_party\/userver\/grpc\/CMakeLists.txt:21 (message):\n  Invalid gRPC package\n\n\n-- Configuring incomplete, errors occurred!```","153":"This is what I have to do right now in order to make it work without duplication of the protocol\n\n```configure_file(\n    ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\/auth.proto\n    ${CMAKE_CURRENT_LIST_DIR}\/proto\/auth.proto\n    COPYONLY\n)\ninclude(GrpcTargets)\nadd_grpc_library(${PROJECT_NAME}_auth_proto PROTOS ${CMAKE_CURRENT_LIST_DIR}\/proto\/auth.proto)```","154":"One more question.\nHow to understand what is this error about?\n```2: ERROR    [POST \/v1\/groups] exception in 'handler-manage-groups' handler in handle_request: Buffer category 'array buffer' doesn't match the category of the parser 'plain buffer' for type 'utils::DBValue<std::vector<boost::uuids::uuid, std::allocator<boost::uuids::uuid> >, utils::StringLiteral<12ul>{char [12]{(char)105, (char)110, (char)115, (char)116, (char)114, (char)117, (char)109, (char)101, (char)110, (char)116, (char)115}}>' (field #1 name `instruments` C++ type `utils::DBValue<std::vector<boost::uuids::uuid, std::allocator<boost::uuids::uuid> >, utils::StringLiteral<12ul>{char [12]{(char)105, (char)110, (char)115, (char)116, (char)114, (char)117, (char)109, (char)101, (char)110, (char)116, (char)115}}>`. Postgres ResultSet error) (userver::storages::postgres::InvalidParserCategory)\n\n```this is error is for the field ``DbValue<std::vector<boost::uuids::uuid>, \"test\">`.\n\nThe code that throws this error is `row.AsSingleRow`\n\n```struct Test {\n    boost::uuids::uuid id;\n    utils::DBValue<std::vector<boost::uuids::uuid>, \"instruments\"> v;\n};\nconst auto res = _pgCluster->Execute(pg::ClusterHostType::kMaster, kInsertTest, ...);\nconst auto test = res.AsSingleRow<Test>(pg::kRowTag);\n...```","155":"If this happens faster, could you also add instructions how to add it to docker?","156":"I've just committed a slightly modified version of the patch, please try pulling the fresh userver and rebuilding (deleting the old build directory, again)","157":"Well, my idea was to start with the simple approach;  link \"the build\" (presumed to be in \/userver) to third_party:\n\nrm -rfd third_party && rm -rfd .gitsubmodule && ln -s \/userver third_party","158":"psql (PostgreSQL) 14.8 (Homebrew)","159":"Why not? Even if I use it for development in order to be able to develop, my docker image would be always run to save my build cache at least.","160":"I am watching","161":"it is very strange","162":"I\u2019m going to bookmark that example.  Great practical way to leverage docker and ccache together for a UServer microservices project.","163":"Robots can translate that article for you https:\/\/translated.turbopages.org\/proxy_u\/ru-en.ru.481bb5f8-650c3566-d297a749-74722d776562\/https\/habr.com\/ru\/companies\/yandex\/articles\/647853\/","164":"Conan will introduce breaking changes in Conan v2. If you wanna change Conanfile a lot, don't forget about it. Or wait for v2 release and then rewrite conanfile. Cci recipes partially support v2 and v1 features in one recipe but it may be challenging a bit if recipe provides more than one component and has more than one depends. \nFrom my opinion it's better to wait for v2 and then modify recipe.","165":"Let\u2019s try remove `Makefile.local`","166":"I have added  set(PYTHON \"\/usr\/local\/bin\/python3\")","167":"sorry, but as was said earlier it's not in our plans for the RC, maybe sometime in the future","168":"Looks like the same breaking changes that were in Vinni Falco's Beast\ud83d\udc4d","169":"so will swagger support come \ud83d\udc49\ud83c\udffb\ud83d\udc48\ud83c\udffb","170":"There is strange URL in there. And I cannot understand, how or why it can be there?","171":"Just use pgmigrate :)","172":"Please add cmake flag:\n```-DUserverGrpc_VERSION=1.51.0```","173":"I was able to compile it finally, thank you.\nI did not change anything, It turned out the `settings.compiler.libcxx` was set for root user, not for the current one","174":"In mysql driver i'm working on i have a InsertOne for this purpose, which takes one aggregate as an argument and unrolls it into its fields","175":"It is high priority, but not yet. For now, Conan is the only working packaging solution, but it does not support: postgres portals, clickhouse, mysql","176":"Hey guys,\nDoes userver support Windows (msvc)?","177":"Yeah I gave up already and decided just to go this way also :)","178":"What docker image are you using?","179":"if there exists third_party directory put it somewhere outside. Then run again git submodule update --init","180":"Hello, I have dealt with a similar issue.  I solved it using the `external` network type.\n\n`docker network create --driver bridge --gateway 172.19.7.2 --subnet 172.19.7.0\/24 mytestoverlay`","181":"OK.","182":"This might be the one command, let's see together","183":"Yes","184":"Oh. Ok, can I specify a full path in \"find_shemas\"? Like this:\n```@pytest.fixture(scope='session')\ndef pgsql_local(service_source_dir, pgsql_local_create):\n    \"\"\"Create schemas databases for tests\"\"\"\n    databases = discover.find_schemas(\n        'testdb',\n        [service_source_dir.joinpath('db\/schema.sql')],\n    )\n    return pgsql_local_create(list(databases.values()))```","185":"Just out of curiosity; did you guys consider Rust as an alternative to doing all of this in C++?","186":"I am using userver v1 docker container","187":"Hi there.\n`utils::Async` will create a task on current task processor or you can specify one yourself. Task processor is a fixed size thread pool, no additional threads will spawn.\nCheck out [the documentation](https:\/\/userver.tech\/db\/d90\/md_en_2userver_2task__processors__guide.html) for more info.","188":"Also even when I'm inside postgres from the command line it says that my database was not found:\n```postgres=# \\c dynconf_service\nconnection to server on socket \"\/var\/run\/postgresql\/.s.PGSQL.5432\" failed: FATAL:  database \"dynconf_service\" does not exist\nPrevious connection kept```","189":"Would be helpful to print all variables asap so you don't have to run it every time to see new errors....","190":"any plan for windows?","191":"Ok..\nplease add this cmake options\n```\n-DUSERVER_NO_WERROR=1 -DUSERVER_CHECK_PACKAGE_VERSIONS=0 \\\n  -DUSERVER_DOWNLOAD_PACKAGE_CRYPTOPP=1 \\\n  -DOPENSSL_ROOT_DIR=$(shell brew --prefix openssl) \\\n  -DUSERVER_PG_INCLUDE_DIR=$(shell pg_config --includedir) \\\n  -DUSERVER_PG_LIBRARY_DIR=$(shell pg_config --libdir) \\\n  -DUSERVER_PG_SERVER_LIBRARY_DIR=$(shell pg_config --pkglibdir) \\\n  -DUSERVER_PG_SERVER_INCLUDE_DIR=$(shell pg_config --includedir-server)```","192":"Congrats, I didn't see it)","193":"Please try bumping spdlog version here to 1.9.2 then reinstalling userver then cleaning and rebuilding `test_package\n`https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/conanfile.py#L86","194":"https:\/\/stackoverflow.com\/a\/58947386\/5173839","195":"deleted","196":"It is printing a correct path to an existing file schema.sql","197":"https:\/\/userver.tech\/d9\/d72\/md_en_userver_tutorial_hello_service.html","198":"Or I can just do the same and it will just work? If I copy-paste everything from here","199":"good luck","200":"thanks!","201":"Hello colleagues.\nI'm having a trouble with setting up the component `DynamicConfigClient`.\nHere is how I define my components list\n```    componentList\n        .Append<os_signals::ProcessorComponent>()\n        .Append<components::Server>()\n        .Append<components::AuthCheckerSettings>()\n        .Append<components::Logging>()\n        .Append<components::Tracer>()\n        .Append<components::ManagerControllerComponent>()\n        .Append<components::StatisticsStorage>()\n        .Append<components::DynamicConfig>()\n        .Append<server::handlers::Ping>()\n        .Append<components::TestsuiteSupport>()\n        .Append<components::HttpClient>()\n        .Append<components::DynamicConfigClient>()\n        .Append<components::DynamicConfigClientUpdater>()\n        .Append<server::handlers::TestsControl>();```\n\nAs you can see, the `components::HttpClient` is there!\nBut at runtime I'm getting an exception:\n\n```Unhandled exception in components::Run: Component 'dynamic-config-client' requested component with non registered name 'http-client' of type userver::components::HttpClient```\n\nWhat am I doing wrong?","202":"Hello!\nPlease, tell the system parameters where you are trying to run the container, which operating system and docker version, as well as which architecture. Thanks.","203":"Hello, what is the version of userver protoc?","204":"btw it took me ages (1+ hour) to build userver on docker with 12 cores + 32 RAM.","205":"Probably\n\n`MacOS: brew install postgresql@14`","206":"`SOURCE_PATH ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto`","207":"I must say the userver build really became much faster. Can't wait to update to it :)","208":"Updated the link, thanks!","209":"Not the most pleasure thing to do it for each service after the update","210":"Could you help me to find out how to use userver?\nMy microservices are spread across multiple repositories. Let's say repo_a, repo_b, repo_c. Every microservice should use userver. If I make it as a submodule for every repo I'll need to compile userver for every single microservice. What I want to do is to compile some version of userver only once and use it across all of my microservices. Usually I do it just with installing and using from there. But here I cannot figure it out, how to start using userver, because I cannot even use Conan, simply because userver cannot be packaged. What am I missing?","211":"must have it","212":"I think the address should be `[::]:PORT` on the server side (meaning ~ \"listen on all 'self' IPs\"), but `[::1]:PORT` on the client side (meaning ~ \"talk to IPv6 loopback\")","213":"NVM I just found it is the `Parse`","214":"But still no luck","215":"It's `clients::http::Request::timeout`","216":"Yeah, a debug print","217":"It just historically happen so","218":"Please try prepending `\/usr\/local\/bin` to the beginning of your `PATH\n`For example, add this line to `~\/.bashrc` (if it's not already there)\n`export PATH=\/usr\/local\/bin:$PATH\n\n`Then remove userver BUILD_DIR and try rebuilding","219":"second, i have idea","220":"Or removing `self.requires('fmt\/8.1.1')` entirely could help","221":"You'll probably need to use `spawn_task` to keep the task running while it's needed, and then cancel it at test shutdown. You can extract the `spawn_task` call into a fixture, perhaps with `autouse=True`","222":"Just to be clear what I am trying to do.\nI have a table named \"groups.all\" and a mapped type to this table `class MyGroup`.\nI want now to get this type and insert into the database.\nBasically I am doing it like this:\n\n```MyGroup group = retrieveFromSomewhere(...);\n_pgCluster->Execute(pg::ClusterHostType::kMaster, \"INSERT INTO groups.all VALUES ($1) ON CONFLICT DO NOTHING\",  group);\n\n```Can I actually do this and is this legal?","223":"Hello.\nCan I get all keys from a json Value?","224":"Hi. There are couple of pgmigrate tools available.\nDid you mean this one? https:\/\/github.com\/yandex\/pgmigrate","225":"Ah, correct one then","226":"I want to use client WebSocket interface for such urls `\"wss:\/\/www.example.com\/socketserver\"`\nIs there any appropriate class in userver ?","227":"https:\/\/clang.llvm.org\/docs\/UsersManual.html","228":"I don't know the details of the python code, but my computer seems to have to add","229":"Hi, do you plan to support graphql and swagger-ui?","230":"We have swagger and OpenAPI codegen internally, but it is coupled with internal infrastructure. The uncoupling work will take some effort that is hard to justify to the management. It may happen at some point or may never happen","231":"Say me please that all ok.","232":"Check this out\nhttps:\/\/github.com\/itrofimow\/FrameworkBenchmarks\/tree\/reuse_ccache\/frameworks\/C%2B%2B\/userver\n\ni'm building it like this\n```docker build -t userver_ccache -f populate_ccache.dockerfile .\ndocker build -t userver_app -f userver.dockerfile .```\nand the second `docker build` is basically a no-op because of `ccache`\n\n\nTo add to that, i would kindly ask you to remain respectful in any further discussions:\nyou came here looking for help, and people are providing it, for free out of their good will. You have, of course, all the rights to dismiss their input, but there's no need to do that in a passive-aggressive manner. \n\ud83d\udd4a","233":"Hello everyone.\nI'm trying to build and install userver. Everything has been built without any issues using command `cmake -DCMAKE_INSTALL_PREFIX=\/usr\/local\/lib\/userver ..`. After that I'm trying to install userver. But not all libraries and headers are getting installed. Am I doing something wrong or why is it happening? Here is an output of the install command: https:\/\/pastebin.com\/pwdHhbA3","234":"```if (USERVER_OPEN_SOURCE_BUILD)\n  set(PYTHON_PACKAGE_NAME python3)\n  find_package(Python3 REQUIRED COMPONENTS Interpreter)\n  set(PYTHON ${Python3_EXECUTABLE})\n  set(PYTHON \"\/usr\/local\/bin\/python3\")\nelse()```","235":"Thanks a lot","236":"Yes, I did not even notice it because of this habit to look at the end of errors :)","237":"#digest September, 2022\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0f [Ivan Trofimov](https:\/\/github.com\/itrofimow) implemented the `RabbitMQ` driver\n\n\u25ab\ufe0f`start-* `targets for the samples, to simplify experimenting with them\n\n\u25ab\ufe0f`USERVER_FEATURE_UTEST` flag for disabling `utest` and `ubench` target builds, thanks to [Anton](https:\/\/github.com\/Jihadist) for the PR\n\n\u25ab\ufe0fan ability to turn on `gRPCs` `ChannelZ`\n\n\u25ab\ufe0f`evalsha\/script` load commands for Redis driver\n\n\u25ab\ufe0fnavigation to the next and previous page in docs, thanks to multiple feature requests in [Telegram support chat](https:\/\/t.me\/userver_ru)\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fImproved `Task::Detach` docs and added recommendation to use `concurrent::BackgroundTaskStorage` instead, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the bugreport\n\n\u25ab\ufe0fFixed CMake issue with `-DUSERVER_FEATURE_TESTSUITE=0`, thanks to [Georgii Popov](https:\/\/github.com\/JorgenPo) for the bugreport\n\n\u25ab\ufe0fFixed build on Arch Linux, thanks to [Mikhail K.](https:\/\/github.com\/posidoni) for the bugreport\n\n\u25ab\ufe0fSimplified gRPC component registration and usage\n\n\u25ab\ufe0fFixed building in virtual environment on Windows, thanks to [sabudilovskiy](https:\/\/github.com\/sabudilovskiy) for the bug report\n\n\u25ab\ufe0fFixed building with `-std=gnu++20`, thanks to [Georgii Popov](https:\/\/github.com\/JorgenPo) for the PR\n\n\u25ab\ufe0fImproved package version detection in CMake via `pkg-config`\n\n\u25ab\ufe0fDocs now support dark theme out ot the box","238":"Okay, for maximum ugliness, copy-paste the contents of `AddGoogleTest.cmake` right after `find_package(userver REQUIRED)`","239":"Yes, you define how to retrieve a value that is not yet cached","240":"Ok.\nBasically got the same error, but with `std::vector`\n\n```no known conversion for argument 1 from 'const std::vector<models::Type, std::allocator<models::MyEnum> >' to 'const models::MyEnum&'```","241":"Thanks!\nWould it also be possible to check components dependencies at compile time?","242":"#digest August, 2023\n\n\u2b50\ufe0f **Deadline Propagation** is now implemented and [documented](https:\/\/userver.tech\/d6\/d64\/md_en_2userver_2deadline__propagation.html).\n\n\ud83e\uddd1\u200d\ud83c\udf93**Projects from **[Yandex Schools](https:\/\/academy.yandex.ru\/schools):\n\n\u25ab\ufe0f[Documentation](https:\/\/userver.tech\/) was redesigned by [hellenisaeva](https:\/\/github.com\/hellenisaeva) and [MariaGrinchenko](https:\/\/github.com\/MariaGrinchenko); new design was made up by [Fedor Alekseev](https:\/\/github.com\/atlz253), [fleshr](https:\/\/github.com\/fleshr), [ZenkoWu](https:\/\/github.com\/ZenkoWu), [Michael Talalaev](https:\/\/github.com\/InfinityScripter); the whole process was managed by [Oleg Komarov](https:\/\/github.com\/0GE1) with feedback from marketing specialist [makachusha](https:\/\/github.com\/makachusha). Many thanks to all the participants for the great work.\n\u25ab\ufe0fImplemented initial API for RFC 7616 - HTTP Digest Access Authentication, thanks to [Almaz Shagiev](https:\/\/github.com\/bashkirian), [Konstantin Antoniadi](https:\/\/github.com\/KonstantinAntoniadi), [Ilya Golosov](https:\/\/github.com\/bookWorm21), and [Niyaz](https:\/\/github.com\/mnink275) for multiple PRs!\n\u25ab\ufe0fstd::bitset<N>, std::array<bool, N>, userver::utils::Flags<Enum> and integral values are now mapped to PostgreSQL bit and bit varying types. Thanks to [dsaa27](https:\/\/github.com\/dsaa27) and [bshirokov](https:\/\/github.com\/bshirokov) for the PRs!\n\u25ab\ufe0fInitial `Realmedium` sample was implemented and moved into a separate repository at [userver-framework\/realmedium_sample](https:\/\/github.com\/userver-framework\/realmedium_sample). Thanks to [berholz](https:\/\/github.com\/berholz), [rumxcola](https:\/\/github.com\/rumxcola), [Konstantin Artemev](https:\/\/github.com\/rumxcola), [GasikPasik](https:\/\/github.com\/GasikPasik), [Anna Volkova](https:\/\/github.com\/etoanita), [Nikita Semenov](https:\/\/github.com\/NikitaSemenov1), [Daniil Boriskin](https:\/\/github.com\/Riferus), [VVendor](https:\/\/github.com\/VVendor) for the PR!","243":"It is mostly experimental and undocumented, but when called in an HTTP handler, HTTP client will send an additional header:\n`X-YaTaxi-Client-TimeoutMs`\n\nIf the downstream is also based on userver, its HTTP handler will account for the deadline. If at any point deadline is reached while waiting for an HTTP client request, `clients::http::CancelledException` will be thrown.\n\nThe feature is still under development, but this main part is mostly working","244":"To add to that, please note that although it's likely the shortest way, it's also the most error-prone one (migrations, for example)","245":"ok, thank you for your interest\nlet's try to make everything come together for you","246":"looks like the cmake run without `-DLTO_CACHE=OFF` option, probably it was cached\n\nClear the whole directory, where you run the cmake and try again with `-DLTO_CACHE=OFF`","247":"Thanks","248":"Try\n`git submodule update --remote`","249":"But what would $1 be in this scenario?  the name of another table?","250":"Hello!\nCan I get inserted row after transaction is successfully executed and `result.RowsAffected()` is not 0?","251":"Hello everyone.   Just checking in.  Do we have an update on when we think the framework will be coming out of beta?","252":"At the same time I see that conan sees GTest: `Conan: Using autogenerated FindGTest.cmake`","253":"and here is some documentation on that\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/CONTRIBUTING.md","254":"I'll experiment with cmake, will report back soon","255":"-fdiagnostics-parseable-fixits\nPrint Fix-Its in a machine parseable form.\n\nThis option makes Clang print available Fix-Its in a machine parseable format at the end of diagnostics. The following example illustrates the format:\n\nfix-it:\"t.cpp\":{7:25-7:29}:\"Gamma\"","256":"Oh yes. It works now. Thank you!","257":"Yes, the service does not create schemas on it's own. \n\nHowever, in tests you could tell the testsuite to create the DB for you and fill it with test data https:\/\/github.com\/userver-framework\/pg_service_template\/blob\/eefccdf1039225a20ce4313d6850d9c0e6fa4ec9\/tests\/conftest.py#L17-L32","258":"The problem was that the test could not find my .proto file due to the wrong path specified.","259":"Looks like this works\n\n```template<class T>\nstruct BufferFormatter<MyType<T>> : BufferFormatter<T>\n{\n    using ValueType = MyType<T>;\n    explicit BufferFormatter(const ValueType& val) : BufferFormatter<T>(val.value)\n    {}\n};```","260":"Not sure why it says there's no support here. But in terms of client-server architecture, I believe there is the async support for it.","261":"in static_config.yaml","262":"I'm starting to believe we are missing something obvious here\n\nWould you be able to share your static config together with the relevant parts of main? The whole service shared would be an ideal case","263":"https:\/\/pastebin.com\/BcymYn0r","264":"Let me try it again","265":"Sure: https:\/\/pastebin.com\/aj8866C6","266":"pip3 install jinja2","267":"Mostly yes, if the dynconf service breaks, then none of our services can start :P","268":"not sure if this is the intended way, but some people are doing it like this\n\n```@mockserver.json_handler('<some prefix>', prefix=True)\nasync def _do_mock(request):\n    match = <some regex to extract arg>.match(request.url)\n    if match is not None:```","269":"\ud83d\udccc **Optimized internals**:\n\n\u25ab\ufe0f[storages::redis::SubscribeClient](https:\/\/userver.tech\/d6\/d2d\/classstorages_1_1redis_1_1SubscribeClient.html) subscriptions were optimized to do less dynamic allocations on new message and use a faster lock-free queue.\n\u25ab\ufe0fEscaping of tags for logging is now done at compile-time by default, which gives up to 30% speedup in some cases.\n\u25ab\ufe0fInternal asynchronous logging logic was rewritten, leading to better scalability and more than 25% speedup.\n\u25ab\ufe0fHTTP client connection is now preserved on deadline, leading to less connections being reopened.\n\n\n\ud83d\udcbb Build changes:\n\n\u25ab\ufe0fMacOS build instructions were enhanced, thanks to [Daniil Shvalov](https:\/\/github.com\/danilshvalov) for the PR!\n\u25ab\ufe0fConan build was fixed, thanks to [Yuri Bogomolov](https:\/\/github.com\/ybogo) for the PR.\n\u25ab\ufe0fNumerous build and configure fixes.","270":"Hello everyone.\nI am trying to use the LRU Cache component, but struggling to understand what is the `DoGetByKey` and how to deal with it?\nIs this for a key that does not exist or is it something more complex?","271":"Thank you!","272":"thank you!","273":"Follow these instructions\nhttps:\/\/docs.docker.com\/engine\/install\/linux-postinstall\/","274":"Oh, nice. That's what I was looking for. Let me try it out","275":"Not so random :)","276":"userver can run in WSL2. There are no plans for Win32 support, though","277":"i think it is a stroke of genius, particularly since I've had to try to do my own async wrappers around AMQP","278":"Because, there disabled clickhouse and it is disabled absl, and gRPC not found absl and crash","279":"","280":"Following up on this conversation:\n\nWe've got something similar but for bulk operations\nhttps:\/\/userver.tech\/d1\/dc2\/classstorages_1_1postgres_1_1Transaction.html#a94b9d74fd873283bde18c6567fa8d1c7\n\nThe decision was made that proposed `InsertOne` is too error-prone, because it's too easy to accidentally add\/remove fields from struct, and that would only blow as late as at runtime (params count mismatch). This could be validated at compile time, but it's neither that easy nor high in priorities. \nIt's a bit different for bulk operations, because ExecuteBulk executes the provided statement with chunks of its arguments, and implementing that iteration in chunks isn't trivial, yet the demand for api is there\n\nHowever, if you really want this `InsertOne` API it's actually doable in user-code with some 15 lines of template magic:\nhttps:\/\/pastebin.com\/raw\/N3nTGNR9\n\nedit: i was told that there are even easier ways to achieve this with std::apply and boost::pfr::structure_tie\n\nP.S. But please be very cautious about your structs if you go this route","281":"Ok looks like it works with userver_testsuite_add_simple now. Thanks!","282":"But this problem is a stopper for now","283":"Then try to check submodules by running:\ngit submodule update --init","284":"Is this instead of add_subdirectory(tests) ? Right now in that CMakeLists.txt tests directory is not added at all into the project","285":"Then how can I run userver through docker? Is there a proper Dockerfile for this?","286":"Monorepos have their benefits; just ask google :)","287":"to make it work","288":"Also question.\nI have a type\n\n```template <class T>\nclass MyType {\n  T value;\n};\n\n```I want to use this type as a db model. Something like\n\n```struct MyModel {\n  MyType<boost::uuid::id> id;\n  MyType<std::string> name;\n};\n\n```To do this I have to provide a `Formatter` and a `Parser` for `MyType`.\nHow can I do this considering that `T` will always be a type that has a formatter and a parser already and I just want to reuse them?","289":"I've printed the ${RESULT}. It says `No such file or directory`.\nAlso I've printed the ${PYTHON} variable. It is EMPTY. What should I do?","290":"Hello.\nCould you guide me with how best to do the following task.\nI have a table. Let's say the table of users with let's say 3 fields: id, name, number.\nIn the `HandleRequestThrow` I want to `SELECT` all users from the table and return the result as a json array, something like `[ {id: 1, name: \"bla\", number: 007}, {id: 2, name: \"blabla\", number: 009} ]`.\nWhat I am doing now is selecting all users like this\n```auto res = _pgClaster->Execute(kSlave, kSelectValue);```\nHow can I now convert the `res` into that json array?","291":"Hey guys.\n\nWhat will happen if I run multiple async tasks in the loop via utils::Async ? Does it have a tread pool internally so it won't create like 100 threads if I have 100 tasks?","292":"cmake generation done.\nNow compilation error.\nhttps:\/\/pastebin.com\/vAPF0LEi","293":"Thank you. Looks like it works","294":"Also try moving `${CMAKE_BINARY_DIR}\n`before `${CMAKE_MODULE_PATH}` here\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/cmake\/SetupEnvironment.cmake#L7","295":"Looks like you select **multiple rows of arrays** and try to put them into **std::vector<enums::MemberPermission>**. The types do not fit, try `std::vector<std::vector<enums::MemberPermission>>`","296":"I think that in the future we will make it possible to install userver as a library in the system, while there are some difficulties with this and more priority tasks. Besides, we are still in beta.","297":"Thank you for the explanation","298":"Yes, there is old version userver(((","299":"Take a look at make_response() method. There is also a way to throw network error or timeout.\n\nhttps:\/\/yandex.github.io\/yandex-taxi-testsuite\/mockserver\/#testsuite.mockserver.server.MockserverFixture.make_response","300":"https:\/\/userver.tech\/da\/d16\/md_en_2userver_2tutorial_2hello__service.html","301":"For own projects though, it would be better to write `build` here instead and name the directory `build`\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/conan\/test_package\/CMakeLists.txt#L4","302":"Moving towards it. Unfortunately, there are some rocks on the road. Dealing with those right now","303":"Seems all working now with this piece of code in tests\/CMakeLists.txt, but new method is not working as I cannot import the `auth_pb2_grpc`","304":"Ok, thanks!","305":"ok","306":"Hey!\nI have a question about using CMake with userver.\nCan I install userver as it is suggested in documentation and then link Redis with my project using `find_package()` in CMakeLists.txt ?","307":"Its about this header https:\/\/www.w3.org\/TR\/baggage\/, and we probably should document it somewhere","308":"Hello everyone.\nHow could I mock http server that has parameter in the url?\nFor example, if I have URL like `someserver.com\/member\/<UUID>`.\nIt is clear how to mock `someserver.com\/member` , but when I try this approach, I am getting an error:\n\n```WARNING Mockserver handler is not installed for '\/member\/96373c6a-ce8e-4028-9f3e-1391084848bd'```","309":"https:\/\/pastebin.com\/cM0CPXMZ","310":"You can use the kMapping to do the string<>enum convereions without using the deatail\/impl parts of the pg driver. And it would work faster than std::unordered_map","311":"@hakobik try to add userver with `ExternalProject_Add` and specify in the `CONFIGURE_COMMAND` variable USERVER_FEATURE_REDIS ON and all the unncessary parts as OFF\n\nThen by adding the prject as a dependency to your one you can easyly use the components you want","312":"allow me","313":"sorry for the delay in responding\nwhat command do you run docker?\nthere should be no problems on ubuntu 22.04, moreover, ci with a docker passes all tests without problems","314":"Again; this all assumes that you'll be using containers, though","315":"\ud83c\udd95 **Added**:\n\n\u25ab\ufe0fMetrics for CPU usage of particular threads of task processors are now available via new [engine::TaskProcessorsLoadMonitor](https:\/\/userver.tech\/d5\/d0e\/classengine_1_1TaskProcessorsLoadMonitor.html) component.\n\u25ab\ufe0fgRPC and HTTP handler metrics were switched to [utils::statistics::Rate](https:\/\/userver.tech\/d2\/d1b\/structutils_1_1statistics_1_1Rate.html), leading to better handling of service start\/stop by metrics storage.\n\u25ab\ufe0f[server::Server](https:\/\/userver.tech\/d0\/d68\/classserver_1_1Server.html) now returns HTTP header `Content-Type: application\/octet-stream` if the content type was not set.\n\u25ab\ufe0fImplemented `ToString(utils::StrongTypedef<floating point>)`, thanks to [Daniil Shvalov](https:\/\/github.com\/danilshvalov) for the PR.\n\n**\ud83d\udccc Optimizations**:\n\n\u25ab\ufe0fSignifiacally **optimized JSON DOM** access to a non-existing element.\n\u25ab\ufe0fLogging now does not lock a mutex in `fs-task-processor` on each log record.\n\u25ab\ufe0f**Up to 3 times faster logging** due to multiple minor tweaks with data copy and memory prereserving.\n\u25ab\ufe0fThe new asynchronous engine::io::sys::linux::Inotify driver for Linux allows subscriptions to filesystem events. Thanks to it the [fs::FsCacheClient](https:\/\/userver.tech\/d7\/d47\/classfs_1_1FsCacheClient.html) now reacts faster.\n\n**\ud83d\udcc4 Docs**:\n\n\u25ab\ufe0f[Custom Authorization\/Authentication via PostgreSQL](https:\/\/userver.tech\/da\/d24\/md_en_2userver_2tutorial_2auth__postgres.html) now provides a **PostgreSQL migrations sample**.\n\u25ab\ufe0fFixed broken refs to hello_service page, thanks to [Danil Sidoruk](https:\/\/github.com\/eoan-ermine) for the PR!\n\u25ab\ufe0f[Universal](https:\/\/userver.tech\/d7\/d67\/group__userver__universal.html) group was added with information on contents of `userver-universal` CMake target.\n\u25ab\ufe0fDocumented [PostgreSQL metrics\n\n](https:\/\/userver.tech\/d9\/dac\/md_en_2userver_2service__monitor.html)**\ud83d\udcbb Build**:\n\n\u25ab\ufe0f**Dropped spdlog** dependency\n\u25ab\ufe0f[CPM library](https:\/\/github.com\/cpm-cmake\/CPM.cmake) is now used for managing third-party dependencies.\n\u25ab\ufe0fFixed cryptopp compilation error, thanks to [Daniil Shvalov](https:\/\/github.com\/danilshvalov) for the PR!\nFixed -Wsign-conversion -Wctad-maybe-unsupported warnings in [utils::TrivialBiMap](https:\/\/userver.tech\/d9\/dbf\/classutils_1_1TrivialBiMap.html), thanks to [darktime78](https:\/\/github.com\/darktime78) for the PR!","316":"Could you give an example? What am I supposed to upload into the registry and how to use this from CMakeLists? Am I supposed to specify userver built directory as \"add_subdirectory()\" or how?","317":"I'm not saying about the host. Everything I say is related to Docker only.","318":"Looks like we need a way to make our \"fix hints\" more visible in the multi-megabyte C++ error reports","319":"I was working on a different approach but had to step out for something else.\n\nMy thoughts are to populate a build directory `\/userver` in the container, and then produce a demo of [the demo service template](https:\/\/github.com\/userver-framework\/service_template); instead of linking to a submodule, the `third_party` would link back to the \/userver build.\n\nThen demo service templates could be used as is kinda\/sorta; but I think CMake details might have to be smoothed over","320":"Would be glad to have a detailed article how to use build directory to build agains it :))","321":"\"Another way\"","322":"May create an issue for this, should i?","323":"We also have an example of bearer authorization https:\/\/userver.tech\/df\/dd1\/md_en_userver_tutorial_auth_postgres.html","324":"You can compare values from file attached in link above.","325":"I will be fix it later..((","326":"I am checking the example here: https:\/\/github.com\/userver-framework\/userver\/blob\/85f5165c70c0e5341318a7be0d54f97d09ba7267\/samples\/postgres_service\/postgres_service.cpp#L105\n\n```const storages::postgres::Query kInsertValue{\n    \"INSERT INTO key_value_table (key, value) \"\n    \"VALUES ($1, $2) \"\n    \"ON CONFLICT DO NOTHING\",\n    storages::postgres::Query::Name{\"sample_insert_value\"},\n};\n\n```So with the mapped value it would look like this?\n```const storages::postgres::Query kInsertValue{\n    \"INSERT INTO key_value_table \"\n    \"VALUES $1 \"\n    \"ON CONFLICT DO NOTHING\",\n    storages::postgres::Query::Name{\"sample_insert_value\"},\n};\nauto res = transaction.Execute(kInsertValue, myKeyValueMapped);```","327":"So if I want to parse another value I should write another parser and kMyConfig?","328":"This one\n\n```Unhandled exception in components::Run: Component 'dynamic-config-client' requested component with non registered name 'http-client' of type userver::components::HttpClient```","329":"That's not a \"diagnostics could be improved\" case, that's a bug. If userver postgres relies on a static registrator in its own source files being run, it should ensure it being run","330":"it works!","331":"We measured it about 3 years ago. For example, it was speeding up logging benchmarks for 15%","332":"Details could be found here https:\/\/yandex.github.io\/yandex-taxi-testsuite\/mockserver\/","333":"My guess is that someone is trying to use your server for some bad things, and that someone fails","334":"Yes, I think you are right.\nIt just happened to me that I had to recompile and restart my service several times to add all  dependencies as the diagnostic shows only one missing component at one start. Would still take less time to get all dependencies added. Maybe then the diagnostic could show all missing dependencies?\nBut I guess it's more a newbie problem and after some time I'll just learn all dependencies I need for a service.","335":"Thanks for answer. I am trying to uderstand)","336":"Hello.\nDo we have something in userver or in C++ overall for database migrations?","337":"haven't tried this from start to finish yet","338":"You could try turning off the LTO. `-DUSERVER_LTO=OFF`","339":"But then how the updater would work if there is the dynconf service?","340":"","341":"I have two pains right now. `make install` and writing docs manually for swagger :)","342":"Aha, `test_package` expects the build directory to be named `cmake`, not `build`","343":"We\u2019d only know if it is on GitHub issues but do not know what is in the other tracker.","344":"You will try and say result and we will think how to fix it","345":"Sounds interesting...\n\nThe component list is usually located in one source file and rarely changed. What is the point of maiking the check at compile time, if in a few seconds the binary would run and provide a diagnostic?","346":"Yes","347":"Hellol!\nI see we have Serialize to serialize an object into json.\nDo we have something to deserialize a json into the object?","348":"Afaik userver has Conan support, although it is not present in CCI just yet\n\nAlso ccache could come in handy","349":"`conan search \"userver\/*\"`","350":"\ud83d\ude0a","351":"I know what to do but I'll report it anyway\n```CMake Error at tests\/CMakeLists.txt:1 (include):\n  include could not find requested file:\n\n    UserverTestsuite```","352":"Hello!\nQuick question.\nCan I disable auth checks for functional tests?","353":"You can use conan install while there is no make install","354":"I found as well that it should be the `insert into ... select * from $1`. But maybe something wrong with the value of $1 itself?","355":"Nice work! Looking forward for `make install` !","356":"Fire","357":"Hello experts, I'd like to implement functional tests on a gRPC service using testsuite. I have a background task (userver::engine::Task) that continuously sends a request to a different service. Is there a way that I can stub\/mock this call?","358":"There is a doc https:\/\/userver.tech\/d3\/da9\/md_en_2userver_2tutorial_2build.html#autotoc_md477\n\nWe've added it a two days ago :)","359":"Great, thanks!","360":"What does `install` output?","361":"in the schema.sql I have everything already so I don't really need migrations. The problem is I cannot specify the full path to the db\/schema.sql","362":"... which makes the \"more noticeable static assert messages\" task more important","363":"https:\/\/github.com\/userver-framework\/pg_grpc_service_template\/blob\/develop\/src\/hello_client.hpp#L4\n`<userver\/components\/component.hpp>`","364":"So every service is built separately anyway","365":"Sometimes with new projects, they can lose momentum due to lack of backing.","366":"It works!!","367":"where is this file located","368":"`brew install yaml-cpp libyaml`","369":"@segoon you'll probably want to look into this breakage","370":"thank you, not in a hurry to get results, I will probably start using userver in a few weeks \ud83d\ude1d Russian open source stuff in C++ is always great","371":"No, but I guess the `introspect` is needed only for an intrusive class. At least this is what I see here: https:\/\/github.com\/userver-framework\/userver\/blob\/ae091345594b0c71baa25ac63ebea5d5fe2d73aa\/postgresql\/src\/storages\/postgres\/tests\/typed_rows_pgtest.cpp#L130","372":"If there is a root CMakeLists that includes the common stuff and all the services, the proto library will only need to be generated and built once. ~~But it means that to start building any service, one will have to CMake-configure everything. It's a tradeoff of a monorepo ;)~~","373":"I have one more question.\nI want to test my grpc server. Basically, I just want to do it like with REST, but with gRPC.\nIn the samples I see the testing is done via http handler. Is it possible not to add the http handler for testing and somehow call gRPC api directly?","374":"solved","375":"Hey everyone.\nI want to insert an array of values into my db table but cannot understand how to do it.\nWhat I am trying to do (simplified):\n\n```std::vector<std::string> values{\"one\", \"two\", \"three\"};\nauto res = tx.Execute(\"INSERT INTO my_table (mycol) VALUES ($1), ($2), ($3)\", values);\n``` \nPostgresql. `my_table` here consists of not only `mycol` col.\n\nError I am getting:\n\n```... column notation .mycol applied to type mytable[], which is not a composite type\n\n```How should I do it instead?","376":"Indeed. Thank you very much, that works!","377":"Hello colleagues.\nI have a mapped enum that I want to serialize to an array of literals.\nCurrently I am doing it like this:\n\n```template <typename T>\nformats::json::Value serializeMyEnum(const T& enumValues) {\n    formats::json::ValueBuilder arrayBuilder(formats::json::Type::kArray);\n    for (const auto& value: enumValues) {\n        arrayBuilder.PushBack(pg::io::detail::EnumerationMap<models::MyEnum>::GetLiteral(value));\n    }\n\n    formats::json::ValueBuilder builder(formats::json::Type::kObject);\n    builder[\"values\"] = arrayBuilder.ExtractValue();\n    return builder.ExtractValue();\n}\n\n... HandleRequestJsonThrow(...)\n{\n    const auto result = _pgCluster->Execute(pg::ClusterHostType::kSlave, kSelectTypes);\n    const auto enumValues = result.AsSetOf<models::MyEnum>();\n    return serializeMyEnum(enumValues);\n}\n``` \n\nIt works but I feel like there should be more idiomatic way to do it?","378":"include(ExternalProject)\nExternalProject_Add(\n    userver\n    URL # you can put here direct http link ori instead of URL GIT_REPOSITORY\/GIT_TAG\n    SOURCE_DIR \"${CMAKE_BINARY_DIR}\/3rd_party\/userver\"\n    CMAKE_ARGS\n      -DENABLE_SHARED=FALSE\n      -DENABLE_STATIC=TRUE\n      -DUSERVER_FEATURE_POSTGRESQL=NO\n      -DUSERVER_FEATURE_REDIS=ON\n      -DUSERVER_FEATURE_GRPC=OFF\n      -DUSERVER_FEATURE_UNIVERSAL=OFF\n      -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}\/userver\n      -DCMAKE_POSITION_INDEPENDENT_CODE=ON\n      -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES}\n    # It can be make or vcpkg\n    # INSTALL_COMMAND \"\"\n    LOG_DOWNLOAD TRUE\n    LOG_CONFIGURE TRUE\n    LOG_BUILD TRUE\n    LOG_INSTALL TRUE\n    TEST_COMMAND \"\"\n)\n\nyou can run something like this and change it accordingly","379":"When Windows support?","380":"That's it.","381":"Mostly waiting for Websockets and HTTP2 (and some tweaking for the logs)","382":"The static config is missing the 'http-client' configuration section\n\nP.S.: yep, the exception message is not  very clear. We'll adjust it soon","383":"Yep, this works","384":"Please try applying this patch to userver, then cleaning BUILD_DIR and rebuilding\nhttps:\/\/pastebin.com\/JpspBPNL","385":"moment","386":"Github CI agents have lots of preinstalled packages, so this list is incomplete","387":"\ud83e\udd20","388":"The first one, from docs","389":"Luckily it happened that way because Go already was built with async patterns from the start. It is good that the UServer framework is a C++ framework so that these techniques can be used in C++.","390":"Looks like should also do the trick","391":"Yes, just noticed it also. Thanks!","392":"Let's say instead of, for now","393":"```add_grpc_library(\n    ${PROJECT_NAME}_auth_proto\n    SOURCE_PATH ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\n    PROTOS ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\/auth.proto\n)```","394":"I think I understood :)","395":"Thanks! Will take a look!","396":"Ok thanks :)","397":"Ok. Understood. \n\nThis came up because one of my coworkers was concerned about the status of the framework with only a partial portion of the bugs being visible to the \u201copen world.\u201d  \n\nLuckily we\u2019re not concerned about lack of ability to report an issue especially after these clarifications. \n\nHowever, in the interest of transparency for would-be users, it might be a good idea in the future to consolidate all bugs in one publicly viewable place unless they directly pertain to or cannot be separated from internal\/private Yandex code.  Without this you don\u2019t know what bugs the team already knows are out there unless A) someone already filed it on GitHub or B) you just found the bug an you\u2019re now filing it :)\n\nOne idea might be to move all such bugs off the old tracker and into GitHub issues if possible. \n\nOr possibly even shut down GitHub issues and [use a Jira (sort of like MariaDB](https:\/\/jira.mariadb.org\/))  and put a clear message in the readme about how to file a bug ([like this example](https:\/\/github.com\/MariaDB\/server#bug-reports)).\n\n\nThis can be set up so that private issues are only visible to Yandex or other authorised persons but that remaining issues can be seen by everyone.","398":"https:\/\/pastebin.com\/x4Bii2zV","399":"thanks!!","400":"Basically I want to use schema that dbmate generated for me. So I specify the db\/schema.sql file.\nschema.sql looks like this: https:\/\/pastebin.com\/EgvFagHV","401":"Thank you! One question regarding this part:\n```Tested service should be configured to pass all HTTP calls to mockserver, e.g.:\n\nhttp:\/\/mockserver-address\/service-name\/path```\n\nI see the handler part `\/service-name\/path` is specified in the `@mockserver.json_handler`. But what should I specify for the `http:\/\/mockserver-address` in my static config?","402":"tried this. Still syntax error:\n```2: ERROR    [POST \/v1\/groups] exception in 'handler-manage-groups' handler in handle_request: ERROR:  syntax error at or near \"$1\"\\nLINE 1: insert into groups.all select * from $1\\n                                             ^\\n (userver::storages::postgres::SyntaxError)```","403":"Another idea I\u2019d throw into the mix. \n\nThere is a Docker build provided. It\u2019s possible to use that  \n\nWhen it\u2019s time to make a release you could do a Dockerfile of your own which starts with something like \n\nFROM ghcr.io\/userver-framework\/docker-userver-build-base:manifest-amd64\n\n# commands to build your source \n# maybe \nRUN make \n\n# or maybe\nRUN mkdir -p build && cd build && cmake .. \n\nCMD your-app-binary","404":"Docs do not work when it comes to compiler errors. I was thinking towards using a decorations for messages, like in Boost.PFR https:\/\/github.com\/boostorg\/pfr\/blob\/ed28602c2cc7b330140e67412552ed7ec2e4fe8d\/include\/boost\/pfr\/detail\/core17.hpp#L63","405":"Is it safe to use a `rawCache` inside the `LruCacheComponent`?\nFor example, if I implement a public method in a subclass of `LruCacheComponent` something like\n\n`void insert (const Key &key, const Value &value)` where I use the `rawCache::put`\n\nCan I do it?","406":"I guess I should use `formats::json::Value` right?","407":"But if I do first this? `sudo apt install $(cat scripts\/docs\/en\/deps\/ubuntu-22.04.md | tr '\\n' ' ')`","408":"This URL has no relation with my host","409":"Hi,\n\nWhat particular graphql database are you interested in?","410":"Found it. It's `POSTGRES_DEFAULT_COMMAND_CONTROL`","411":"How do you develop on host machines? :))","412":"Iirc its iteratable, or are you looking for something more explicit?","413":"Ok, wait a minute, thank you for your help, I will try other protobuf versions, If I don't succeed I will send my cache later","414":"the new AMQP driver is how I stumbled across the project.  Now we're considering dumping our AMQP C++ implementation for this because you guys have tracing\/otel built in.","415":"@antoshkka this will be soon right?","416":"@alexipro","417":"Yeap","418":"all right, thank you","419":"Hi!\nCould you share your experience? What do you use for communication between services internally?","420":"@antoshkka Take a note, I guess\n\nAlthough at this point we are pretty much limited to what our internal infrastructure supports. Contributions are welcome \ud83d\ude05","421":"Somebody already thought of this when they made the docker-compose for the demo service_template.","422":"Basically I need just to use my type as an arg, right?\n```res = GetConn()->Execute(\"SELECT $1 as value FROM example.table\", myMappedValue);```","423":"Is it possible to switch to a fallback if there's no dynamic configs service running?","424":"#digest March, 2023\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0f Now logging of particular lines could be controlled by dynamic config. See [USERVER_LOG_DYNAMIC_DEBUG](https:\/\/userver.tech\/dd\/d2c\/md_en_schemas_dynamic_configs.html#USERVER_LOG_DYNAMIC_DEBUG) for more info\n\n\u25ab\ufe0fHTTP headers that contain the tracing context now could be customized, both for handlers and HttpClient, by feeding [tracing::TracingManagerBase](https:\/\/userver.tech\/db\/d3d\/classtracing_1_1TracingManagerBase.html) implementation into [tracing::DefaultTracingManagerLocator (docs](https:\/\/userver.tech\/da\/d25\/classtracing_1_1DefaultTracingManagerLocator.html) to come soon)\n\n\u25ab\ufe0fUser defined literals for different formats are now available at [formats::literals](https:\/\/userver.tech\/d0\/d5a\/namespaceformats_1_1literals.html)\n\n\u25ab\ufe0fAdded [crypto::CmsSigner](https:\/\/userver.tech\/d8\/d20\/classcrypto_1_1CmsSigner.html) and [crypto::CmsVerifier](https:\/\/userver.tech\/d6\/def\/classcrypto_1_1CmsVerifier.html) as per RFC 5652\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0f [cache::LruMap](https:\/\/userver.tech\/d1\/d2c\/classcache_1_1LruMap.html) and [cache::LruSet](https:\/\/userver.tech\/d5\/d9c\/classcache_1_1LruSet.html) now work with non-movable types\n\n\u25ab\ufe0f`BSON<>JSON` conversions now supported via `json_value.ConvertTo<formats::bson::Value>()` and `bson_value.ConvertTo<formats::json::Value>()`\n\n\u25ab\ufe0f [engine::CancellableSemaphore](https:\/\/userver.tech\/de\/def\/classengine_1_1CancellableSemaphore.html) was implemented\n\n\u25ab\ufe0fStatistics and metrics now do additional lifetime checks in debug builds to catch improper usages\n\n\u25ab\ufe0fPush functions of [concurrent::MpscQueue](https:\/\/userver.tech\/d0\/d92\/classconcurrent_1_1MpscQueue.html) and other queues now have a `[[nodiscard]]` for compile time misuse detection\n\n\u25ab\ufe0fSignificant improvement of Redis server-side errors diagnostic\n\n\u25ab\ufe0fImproved diagnostics for distributed locking\n\n\u25ab\ufe0fFixed numerous typos in docs and samples\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0fMongo driver switched to a faster [utils::statistics::Writer](https:\/\/userver.tech\/d7\/dd9\/classutils_1_1statistics_1_1Writer.html)\n\n\u25ab\ufe0f [utils::Async](https:\/\/userver.tech\/dc\/db7\/group__userver__concurrency.html#gac91f56844690ea79c568cb3b43ba98a5) functions now make 1 dynamic allocation less, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0fGetting the default logger now takes only a single atomic read. `LOG_*` macro now do two RMW atomic operations less and do not use RCU, that could lead to a dynamic memory allocation in rare cases\n\n\u25ab\ufe0fPostgreSQL driver now does much less atomic operations due to wider usage of `std::move` on the internal `std::shared_ptr`\n\n\u25ab\ufe0fAdded [storages::postgres::Transaction::ExecuteDecomposeBulk function](https:\/\/userver.tech\/d1\/dc2\/classstorages_1_1postgres_1_1Transaction.html#a94b9d74fd873283bde18c6567fa8d1c7) for fast insertion of C++ array of structures as arrays of values\n\n\u25ab\ufe0f`Str[I]caseHash` now uses a 5-10 times faster SipHash13\n\n\u25ab\ufe0fRedis driver now does an asynchronous DNS resolving, amount of heavy system calls dropped down noticeably\n\n\ud83d\udcbb** Build changes:**\n\n\u25ab\ufe0fCMake option `USERVER_OPEN_SOURCE_BUILD` was removed as the build is always the same for in-house and public environments\n\n\u25ab\ufe0fCMake option `USERVER_FEATURE_SPDLOG_TCP_SINK` was removed as now the implementation of the sink does not rely on spdlog implementation\n\n\u25ab\ufe0fConfiguration step was made much faster\n\n\u25ab\ufe0fMakefile was simplified and only up-to-date targets were left\n\n\u25ab\ufe0fAdded a script to prepare docker build, see [Docker for userver](https:\/\/userver.tech\/d5\/d1b\/md_en_userver_docker.html) for more info\n\n\u25ab\ufe0fScripts for generating CMakeLists were simplified and cleared from internal stuff\n\n\u25ab\ufe0fAdded missing dependencies to [ubuntu-20.04](https:\/\/userver.tech\/d5\/d9d\/md_en_deps_ubuntu_20_04.html) and sorted all the dependencies, thanks to [Anatoly Shirokov](https:\/\/github.com\/anatoly-spb) for the PR\n\u2014\n[userver news](https:\/\/t.me\/userver_news)","425":"Hello colleagues.\nIs it possible to mock external http server in python tests and if so where can I find examples of how to do so?\nThanks!","426":"Got it. Thank you!","427":"Looks interesting. How exactly are you planning to use the RowNames?","428":"And how someone could get into API?","429":"if service_template, then maybe there is not enough userver, try running the command\n```\ngit submodule update --init```","430":"Sorry, but it is necessary to add a list of all python dependencies to the instruction","431":"Actually I had the 'http-client' in the static config initially and I had that error that I posted in the first message. But I did not notice I had it and I added another 'http-client' at the end of the static-config file and got the second error message posted. I still cannot add dynamic config client into my service","432":"All the submodule does is link back to the original `userver-framework\/userver` tree.  if you've already built that and baked it into an image, what happens?","433":"It's in the build_debug\/proto\/proto\/","434":"Good.    IF only we used Postgres internally in my company.  With RabbitMQ, Redis, and gRPC, we would have everything already supported.  :D","435":"Thanks, that worked indeed.\nIs it possible to mock responses differently?\nFor example for some requests return an error, for some bad data, for some good data","436":"You need to run a command to build and install userver before. IIRC, it's `conan export-pkg`\nhttps:\/\/docs.conan.io\/en\/latest\/developing_packages\/package_dev_flow.html#conan-export-pkg\n\nI'll try to call someone more knowledgeable on the topic","437":"Yeah. Not sure if MySQL is used insinde Ya. I know nowadays, there is a trend toward PostgreSQL","438":"It is opensource. Anyone can add win support and PR it :)","439":"Ok, you built the userver. But how are you gonna use it in your projects?","440":"https:\/\/pastebin.com\/huBayYPH","441":"\ud83d\ude0athanks","442":"(missing: PostgreSQL_LIBRARIES PostgreSQL_INCLUDE_DIRS) (Required is at least version \"12\")","443":"What we need to know is already there in the compose file and what you're saying is making sense.  If you have multiple projects all connecting to the same cccache and the version required by each is the same then only the \"first builder\" really does solid work.  The rest just all yank from cache","444":"Yes, it allows to manipulate the cache directly. It intentionally only has `protected` access, so that users of your component have read-only access by default, which simplifies reasoning about the cache state. You can expose modifying operations in your cache component if you want, though","445":"it is macos?)","446":"What is the output? \n\npsql -V","447":"Ok. Thank you for advises!","448":"I am trying it now, but here is another problem.\nWhen I do `import auth_pb2_grpc as auth_services` I am getting an error: `ModuleNotFoundError: No module named 'auth_pb2_grpc'` . My auth.proto is added in CMakeLists.txt like this:\n\n```include(GrpcTargets)\nadd_grpc_library(\n    ${PROJECT_NAME}_auth_proto\n    SOURCE_PATH ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\n    PROTOS ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\/auth.proto\n)```","449":"Please also post CMakeCache","450":"Dead link at: https:\/\/userver.tech\/d9\/d72\/md_en_userver_tutorial_hello_service.html \ud83d\ude15","451":"Great work! Waiting for make install \ud83d\ude0a","452":"Hi, a general question.  Is there a central bug tracker for Userver?  Or does the github issues tab serve as the tracker","453":"Let's try. Replace lines 4-7 here\nhttps:\/\/github.com\/userver-framework\/service_template\/blob\/develop\/CMakeLists.txt#L4\n\nwith\n```set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}\/build)\nfind_package(userver REQUIRED)```","454":"Hi! Userver doesn't support ws yet","455":"build success","456":"I understand what you mean but I think you are missing the main issue I have.\nIf there was `cmake install` that'd install userver with all includes and libraries into some system path like `\/usr\/local\/lib\/userver`, the docker image would work like a charm in this case. That's exactly how I wanted it from the beginning.\nBut all you have in your case is just a `build` directory of userver. Which is not gonna work.","457":"Thanks. I also had that in mind. I guess I am good or do I need to do anything extra to protect the service?","458":"No. Is there any doc how to configure it? Is it possible to build userver in a docker, add all libraries into a local Conan index inside the docker image and use this docker image to build services?","459":"I see\n\nCould it be visibility-related? I assume you have CppToUserPg definitions included in enums.hpp, is that correct?","460":"when it's beta it's ok to do it like you do right now (still annoying), but when you release things it must not be like this","461":"I guess it is not added to the path variable","462":"maybe such a library can also be used for role based login\n\nhttps:\/\/github.com\/casbin\/casbin-cpp","463":"We'll try to do that. Meanwhile you could use the https:\/\/userver.tech\/dd\/d2c\/md_en_schemas_dynamic_configs.html#userver_log_dynamic_debug to disable logs you dont need","464":"it's referenced from documentation but should be explained in details:\n\nhttps:\/\/userver.tech\/d1\/dd6\/md_en_userver_functional_testing.html#mockserver","465":"I see.","466":"How do I handle such errors in the userver client side?","467":"As a bonus once one person on your team gets a devcontainer exactly how you want it, the dockerfile or docker compose, plus the dev container config can both be uploaded to your source control so that all other devs can copy it. Now all the team is on the same Dockerized environment","468":"ok I see","469":"FindPython.cmake","470":"@alexipro please help ^","471":"Hi\n\nIs this still relevant? Will have some free time during weekends, may have a look","472":"ok. `POSTGRES_DEADLINE_PROPAGATION_VERSION` ?","473":"Go to `userver\/cmake\/UserverTestsuite.cmake` and delete lines 5-7","474":"should I remove it now?","475":"It's backed by [Yandex](https:\/\/yandex.com\/). Originally designed by Yandex.Taxi team, now its usage spreads through many of its other projects","476":"Hello.\nGot a question but it's more about docker-compose.\nI have 2 postgres uservers. One is dynconf and another one is the one that's using it.\nWhat I want to do is to run them both using docker compose so they can communicate between each other. My dynconf service is working on the port 8083 and my other service work on the port 8084.\nI can run them separately without any issues. They work.\nWhat I've tried to di, I tried to pass the 8083 port to the docker-compose for the another service but in this case it does not start because it says that this port is already in use.\nDo you maybe know where I could read about how to connect two docker compose networks or maybe someone has experience with it already?\nThank you!","477":"You could provide a serializer for your enum https:\/\/userver.tech\/db\/dd7\/md_en_userver_formats.html#customizationofformatsvaluebuilder\n\nSomething like\n```formats::json::Value Serialize(const models::MyEnum& data,\n                               formats::serialize::To<formats::json::Value>) {\n  formats::json::ValueBuilder builder;\n  builder = pg::io::detail::EnumerationMap<models::MyEnum>::GetLiteral(dAte);\n  return builder.ExtractValue();\n}```\nWith it your HandleRequestJsonThrow(...) should look like this\n```{\n    const auto result = _pgCluster->Execute(pg::ClusterHostType::kSlave, kSelectTypes);\n    const auto enumValues = result.AsSetOf<models::MyEnum>();\n\n    formats::json::ValueBuilder builder;\n    builder[\"values\"] = enumValues;\n    return builder.ExtractValue();\n}```","478":"Is make install also on the way? :)","479":"Ok now it works but another one appeared:\n\n```2: ERROR    <userver> Loading failed: Cannot load fallback dynamic config or its overrides: While parsing dynamic config values: Can't find doc for 'POSTGRES_CONGESTION_CONTROL_SETTINGS' (std::runtime_error) (std::runtime_error)```","480":"Does not work meaning it cannot find valid group. And if I replace `$1.name` to a valid name it works","481":"When you tear down these two docker-compose instances, that network will not be destroyed, because it is external; it lives beyond the scope of any one docker-compose operation.","482":"So if the DB driver itself isn't giong to expand a query that far (and in C\/C++ land, I doubt it would without heavy instrumentation), then if the query did go out it would just error out on the DB side","483":"I think that we may print it in a so-called \"Fix-It\" format","484":"Thank you!","485":"Ok thanks!","486":"In my source code this particular include `#include <userver\/clients\/http\/client.hpp>` breaks the build","487":"I added it into the config but it's still not working for some reason","488":"But let me try to add it","489":"Whatever succeeds, I'll need to document the process afterwards - I've already forgotten myself \ud83d\ude05","490":"It is not version gRPC problem it is problem with found dependencies packages","491":"Happy New Year!","492":"Hi, congratulations on the first release version \ud83e\udd73 I want to implement role-based access control. What can I use? I saw that there is no middleware option in the document.","493":"this is mildly confusing, guess i tricked you (and myself) accidentally\n\nwhat happens if you restore the mapping and try the `insert into ... select * from $1` approach?","494":"when ''cmke ..\" show it","495":"cccache might be able to replace some of this, though.","496":"ok","497":"It looks like LTO_CACH is disabled here","498":"I am a bit confused. Could not find how I can disable this `SELECT 1 AS ping` log, do you maybe have some hints?","499":"Please tell me if there are plans to add an example of authorization based on keycloak?","500":"nano ~\/.bash_profile or nano ~\/.zshrc\n\nAt the end of this file, add the line:\n\nexport PATH=\"\/opt\/homebrew\/Cellar\/postgresql@15\/bin:$PATH\"\n\nand save\n\nsource ~\/.bash_profile or source ~\/.zshrc","501":"Hello everyone.\nAfter upgrading userver I get this error when trying to run my functional tests:\n```2: ..\/..\/tests\/conftest.py:6: in <module>\n2:     import grpc\n2: E   ModuleNotFoundError: No module named 'grpc'```\nWhat should I use now?","502":"Thanks! That works","503":"myabe should add PostgreSQL_LIBRARIES and PostgreSQL_INCLUDE_DIRS to PATH?","504":"Yes it works! Thank you!","505":"Please search for a file with this name in the build directory. It might be generated in a wrong place","506":"Guys, please help me out to understand.\nAre postgresql schemas and tables created automatically somehow from files under `schemas\/postgresql\/<NAMEs>.sql` or should I create them myself?","507":"Ow wait it's the same","508":"We're close. There's an awesome PR https:\/\/github.com\/userver-framework\/userver\/pull\/316 that would provide a `make install` after some simplification and cleanup","509":"","510":"https:\/\/github.com\/userver-framework\/service_template\/blob\/develop\/docker-compose.yml","511":"thanks, for the reply) will try it out)","512":"can you tell me what is you protoc \u2014version ?","513":"Hello!\nI am trying now to mock my grpc server for tests. I am doing everything like described here: https:\/\/github.com\/userver-framework\/userver\/blob\/f27ba2f51bc3ecd4d8372eec6745afd01d2271a9\/samples\/grpc_service\/tests\/conftest.py\nBut getting this error during the test execution: \n\n```2: WARNING  [677e88508ac34c9eabb89a13ace9027e] custom handler exception in 'handler-retrieve-group-parameters' handler in check_auth: msg=failed to connect to all addresses; last error: UNKNOWN: ipv6:%5B::%5D:33611: Address family not supported by protocol (userver::server::handlers::CustomHandlerException)\n\n```Could you help me why this happens?","514":"Appreciate. Out of curiousity. Is this what you usually use in production microservices or you have some dedicated tool for it?","515":"Add a proper include from https:\/\/userver.tech\/d9\/dab\/group__userver__postgres__parse__and__format.html to the file where you are using bytea","516":"Not sure maybe it's possible to fix this without changes in userver?","517":"I'll try to explain the sleeping process in a couple of words. A coroutine is managed by `engine::TaskContext` object. There is `WaitListLight` and `WaitList`, which are essentially atomic `intrusive_ptr<TaskContext>` and `list<intrusive_ptr<TaskContext>>`, respectively. When a task starts sleeping on a synchronization primitive, it atomically checks if the synchronization primitive is ready and if not, puts the current task into the WaitList. Sleeping is synchronized using `TaskContext::sleep_state_`. To wake up a task, the synchronization primitive atomically sets a \"wakeup flag\" inside `sleep_state_` and checks if a notification has been sent previously. If not, and if the \"coroutine exited flag\" is already set, the task is scheduled on the associated `TaskProcessor`. Now for the sleeping coroutine side, as it starts sleeping, the thread exits the coroutine, then atomically sets the \"coroutine exited flag\" and checks if the task is already woken up. If so, then the task is scheduled","518":"Yep, the same is in my CI","519":"I see the point but I'd think it's logical behavior.\nUse dynconf service by default -> if not available do fallback -> if dynconf service becomes available connect to it rereading config values.","520":"Is there any plans to use conan for dependency resolution?","521":"userver postgres fixtures probably only support a single DB, with all the migrations in a single directory","522":"pip3 install voluptuous","523":"I have a table:\n\n```CREATE TABLE \"groups\".\"all\" (\n  \"uuid\" uuid PRIMARY KEY,\n  \"name\" text,\n  \"description\" text\n);\n\n```I have a model in cpp\n\n```class MyGroup {\n   std::optional<boost::uuids::uuid> id;\n   std::string name;\n   std::string description;\n};\n\n```and it is mapped to postgresql table group.all\n\n```namespace storages::postgres::io {\ntemplate <>\nstruct CppToUserPg<MyGroup> {\n  static constexpr DBTypeName postgres_name = \"groups.all\";\n};\n}  \/\/ namespace storages::postgres::io```","524":"Hello everyone.\nPlease, help me out to understand what's wrong.\nI am working with Postgres.\nI have my custom type in Postgres:\n\n```CREATE TYPE member_permission AS ENUM (...);\n```In C++ I created the `enum MemberPermission` and mapped it using `CppToUserPg`.\n\nNow I have a table where column `permissions` has a type `member_permission[]` (array of member_permissions).\n\nFinally, I am trying to select the array from the database:\n\n```const auto result = transaction.Execute(\"SELECT permissions FROM table WHERE uuid=$1\", uuid);\nreturn result.AsContainer<std::vector<enums::MemberPermission>>();\n\n```When I do this, I am getting the runtime error:\n```Buffer category 'array buffer' doesn't match the category of the parser 'plain buffer' for type 'models::enums::MemberPermission' (field #0 name `permissions` C++ type `models::enums::MemberPermission`. Postgres ResultSet error\n\n```What can be the reason and how could I fix this?","525":"What is in the `CMakeError.log`?","526":"humm, can you share the project files?","527":"Sounds good!","528":"(fixed a typo in command)","529":"~~@alexipro~~~~ spam ^\n~~ty","530":"Thank you!","531":"Use `engine::Future`","532":"No, I have a Docker image which has a build of UServer created inside of it, so if I extend that docker image and add my own sourec files (e.g., the C++ code of my own app), that C++ code can now be built against the UServer bulid that already exists in that container","533":"Hi there! Hope you're doing well. A small question regarding the library. Is there any plan to support MySQL? (or it might be already somehow undocumentedly supported)","534":"mostly lack of time and there is a bunch of other things we would like to see ironed out, we don't consider it useless though","535":"`middlewares: []`","536":"We already reviewing the PR for the ws, and PR for TLS is almost done","537":"I've tried to mock it like this\n\n```@pytest.fixture(autouse=True)\ndef mock_my_server(mockserver):\n    @mockserver.json_handler('\/member\/{uuid}')\n    def mock(request):\n        return {\n            'result': 'ok'\n        }\n\n    return mock```","538":"@lexlzv","539":"Guys, why is Yandex Cloud written on Golang, but not C++ and userver?","540":"https:\/\/github.com\/userver-framework\/userver\/pull\/119","541":"There is no doc but you can use github action https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/.github\/workflows\/ci-conan.yml as a small doc. If you have any questions feel free to ask. I don't use userver so I provide only recipe and action without doc.","542":"Hi everyone.\n\nWe just landed a breaking change in http area: we no longer store http headers in a `std::unordered_map`,\nbut rather in a custom container.\n\nWith this patch we are seeing up to 25% improvements in RPS in macro-benchmarks of \"just return 200Ok\" \nhandler with close-to-real-world http headers, but the cost of this is iterators\/references stability: \nnow holding an iterator\/reference over map modification point is **UB**, with the rare exception of `erase()` not invalidating `end()` iterator.\n\nWe also deleted most overloads for `\"string literals\"`: \none should either use `constexpr userver::http::headers::PredefinedHeader` instead (which gives a compile-time known hash, literally O(0)),\nor cast to `std::string\/std::string_view` explicitly.\n\nWhen applying the patch to our internal codebase (it's huge) we encountered only a couple dozens of API breaks or functionality breaks, \nand all of them were easy to fix, so we hope the migration (if ever needed) will be easy for you as well.\n\nIn case you need some missing methods or find your services behaving in unexpected ways near http headers, \nplease don't hesitate to ask questions here or file an issue.\n\n\ud83d\udd4a","543":"This code\n\n```    auto result = transaction.Execute(kInsertGroup, group);\n    if (result.RowsAffected()) {\n        transaction.Commit();\n        const auto insertedGroup = result.AsSingleRow<models::Group>();\n        ....\n    }\n\n```gives an exception\n\n```2: ERROR    [POST \/v1\/groups] exception in 'handler-manage-groups' handler in handle_request: A single row result set was expected. Actual result set size is 0 (userver::storages::postgres::NonSingleRowResultSet)```","544":"For conan build can I just reuse this?\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/.github\/workflows\/ci-conan.yml","545":"Actually, no need to configure everything, there are CMake flags for that","546":"But I did it already","547":"ok","548":"`conan profile update settings.compiler.libcxx=libstdc++11 default`","549":"Managing dependencies across multiple repositories is a complicated task indeed, but one could put userver as a submodule\/forked at a fixed version in its own repo and go from there, effectively pinning the version across the workspace\n\nUserver not having install has to do with it been Beta (API stability), and afaik ABI stability isn't planned at all","550":"I'd say it's \"several months away\". @antoshkka may give a more precise estimate","551":"Solved. Apparently my mistake was that I didn't use any symbols from bytea.hpp\/cpp unit. I was trying to extract data using\n`postgres_field.As<std::string>()`\nWhen I replaced it with\n`postgres_field.To(pg::Bytea(str))`\nI started to see in my trace of RegisterPredefinedOidParser::Register how it is called for oid 17 at static initialization. And it still doesn't show up in objdump, so this is unreliable check.\n\nThis post helped me troubleshoot problem:\nhttps:\/\/stackoverflow.com\/questions\/7327741\/initialisation-of-static-object-when-linking-against-a-static-library\nAnd my small test closer to userver setup: https:\/\/godbolt.org\/z\/zKd6Ee3qv\nFlip `kUseFunction` flag to see the difference.","552":"\ud83e\udd79","553":"Well, using dynamic configs client and automatically falling back to the fallbacks file is currently not supported","554":"Fixed, attempt #4 now","555":"But the service template compilation failed with new userver\n\nhttps:\/\/pastebin.com\/NQngM54h","556":"Thanks for the great support here everyone. Really enjoying writing services using userver. Hopefully once I gather more experience there will be less questions :)","557":"It can be in the same file as tests (in which case it will only affect those), or it can be in `conftest.py` (in which case it will affect all tests in its directory). You can also define plain functions that accept `mock_grpc_greeter` (they can be defined anywhere, you can `import` them), then call them in the fixture","558":"Especially if you give a graphic description for how the issue prevents you from adopting userver or from solving problems using userver ;)\nOr if you request a new feature, then a more detailed description of your use-case leads to higher chances of being taken to work","559":"But ofcourse I cannot build https:\/\/github.com\/userver-framework\/service_template using the same approach","560":"Got a glance inside the boost.beast release notes, but didn't find too, will post reference, if find it","561":"This works","562":"For dev purposes you can extend the image in a similar way but for dev purposes use a [VSCode Dev Container ](https:\/\/code.visualstudio.com\/docs\/devcontainers\/containers) which allows you to use VSCode on your PC like you normally would but run your code \u201cinside a container\u201d that has all the tooling you need including UServer itself","563":"I tried to find the version I need, but I didn't find it. Do you have a suggested version? I'll try it","564":"OK, let me try, thank you very much","565":"I might even do a couple of the demo service templates with a common cache just for funsies","566":"maybe can add Protobuf_VERSION mark version, Ok, I'm  a cpp  and cmake beginner\ud83e\udd79","567":"We keep working to improve the compile times. However it's not going to change drastically soon","568":"Make install have a lot of problems with dependencies and we think how make it beautifully","569":"random thought: isn't having ccache populated by userver build in the build image enough?","570":"The DBMS is expecting the table fields (id, name, description)","571":"Why? I have no ideas why conan can be not fully functional","572":"I frankly don't know much else about those builds, and I'm already on the NDA line \ud83d\ude05","573":"this error","574":"hahaha ;)","575":"Thank you!","576":"`-DUSERVER_NO_WERROR=1`","577":"This change helped","578":"sounds interesting we'll take a deeper look at the technology","579":"Yeah... The plan is to purge `dynamic_config_fallback.json` entirely","580":"That's great. Will try to migrate soon.\nBTW do we have userver on techempower?","581":"you have it in completely different order there","582":"Hey guys.\nI saw the `make install` is already in place for userver or not yet?","583":"Just go ahead and try to make it work. I know it won't so I won't even spend my time for it. Not sure why you think it may work.","584":"Ok, you can don\u2019t use clickhouse, but in docker it is has","585":"I'd advise to add a common `CMakeLists.txt` that creates the proto library and can be included by multiple services. That way you also won't end up in a diamond dependency scenario where same protos are generated twice, used in the same binary and cause odr violations","586":"#digest June, 2022\n__\n__**New features:\n\n**\ud83d\udd38`Docker` images in userver now provide the following functionality: \n- build and start all userver tests\n- build `hello_service` sample\n- execute commands in userver dev environment, see the [documentation](https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#docker) for details\n\n\ud83d\udd38We prepared [a](https:\/\/github.com\/userver-framework\/pg_service_template) [service](https:\/\/github.com\/userver-framework\/pg_service_template) [template](https:\/\/github.com\/userver-framework\/pg_service_template) that uses userver framework with PostgreSQL\n\n\ud83d\udd38In template services, it is now possible to deploy the environment and run the service in one command: \n`make` `service-start-debug` or `make service-start-release\n\n`\ud83d\udd38We added `userver::os_signals::Component`, which is used for handling OS signals, see the [documentation](https:\/\/userver.tech\/d9\/d75\/md_en_userver_os_signals.html#userbehavior) for details\n\n\ud83d\udd38You can now allow skipping the component in the static config file by specializing the `components::kConfigFileMode`, see the [documentation](https:\/\/userver.tech\/d2\/d66\/md_en_userver_component_system.html#setupconfigfilemode) for details\n\n\ud83d\udd38The PostgreSQL driver now requires explicit serialization methods when working with `enum\n\n`\ud83d\udd38The result of `HttpRequest::async_perform()` can now be awaited with `utils::WaitAny`, see the [documentation](https:\/\/userver.tech\/de\/df5\/classclients_1_1http_1_1Request.html#async_perform) for details\n\n\ud83d\udd38`engine::WaitAny` can now wait for `engine::Future`, including futures that are signaled by `engine::Promise `from non-coroutine environment, see the [documentation](https:\/\/userver.tech\/d1\/d6b\/md_en_userver_synchronization.html#enginewaitanyandfriends) for details\n\n\ud83d\udd38We improved the documentation:\n- added feature [comparison with other frameworks \n](https:\/\/userver.tech\/d7\/dca\/md_en_userver_framework_comparison.html)- added information about [supported platforms \n](https:\/\/userver.tech\/d9\/d08\/md_en_userver_supported_platforms.html)- added information about [the Beta state \n](https:\/\/userver.tech\/d3\/d53\/md_en_userver_beta_state.html)- added information about [Security Changelog](https:\/\/userver.tech\/df\/d3a\/md_en_userver_security_changelog.html) and [Roadmap and Changelog](https:\/\/userver.tech\/d6\/d38\/md_en_userver_roadmap_and_changelog.html)\n- added [driver writing guide](https:\/\/userver.tech\/d6\/d18\/md_en_userver_driver_guide.html)[\n\n](https:\/\/userver.tech\/d6\/d38\/md_en_userver_roadmap_and_changelog.html)\ud83d\udd38AArch64 build is now supported, and tests pass successfully\n\n\ud83d\udd38Arch Linux is now properly supported, thanks to Denis Sheremet and Konstantin Goncharik\n\n**Optimizations:\n\n**\ud83d\udd38Accelerated serialization of parameters for sending to PostgreSQL - removed up to 6 dynamic allocations for each parameter. Thanks to Dmitry Sokolov for the idea!\n\n\ud83d\udd38Accelerated the handlers that do not log requests or responses\n\n\ud83d\udd38We optimized the creation of `Span` and `utils::Async()`, thanks to Ivan Trofimov for the bug report\n\n\ud83d\udd38Evgeny Medvedev has improved Mac OS support, thanks for the patch!\n\n\ud83d\udd38HTTP headers hashing is not vulnerable to Hash DOS anymore, thanks to Ivan Trofimov for the report","587":"If I recall correctly, it could be declared in an anonymous namespace inside the namespace of a type\n\n> I've got this error\n\nOops, no Serialize customization for TypedResultSet. We'll also look at that. Meanwhile try the following approach:\n\n```{\n    const auto result = _pgCluster->Execute(pg::ClusterHostType::kSlave, kSelectTypes);\n    const auto enumValues = result.AsSetOf<models::MyEnum>();\n\n    formats::json::ValueBuilder builder;\n    builder[\"values\"] = std::vector(enumValues.begin(), enumValues.end());\n    return builder.ExtractValue();\n}```","588":"So i understand that your `MyGroup` has a corresponding user type in PG, right?","589":"now .it show \"no module named 'voluptuous ' \"","590":"`cd build && conan install ..`","591":"Some one is just sending HTTP request like\n\nGET http:\/\/www.some.bad.url\/bla.php HTTP\/1.1\nHost: www.some.bad.url\nProxy-Connection: keep-alive","592":"There's also a StrongTypedef helper, that may be helpful to use to define MyType https:\/\/userver.tech\/d4\/d67\/classutils_1_1StrongTypedef.html","593":"command not found: psql","594":"Thanks, will commit then","595":"Or can I at least inject some headers in a test service client not to repeat those headers in every request?","596":"No, but I have no other choice other than learn it now","597":"Well in the real world there are multiple off-tree builds possible for different types of modes \/ circumstances. And no, if you have separate directory for the build, you cannot just use this directory to build against it.","598":"Hi, I am trying to get started with userver on Ubuntu 18.04\nAs it is written, I am using these commands\n```\nmkdir build_release\ncd build_release\ncmake -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_C_COMPILER=gcc-8 -DUSERVER_FEATURE_CRYPTOPP_BLAKE2=0 \\\n      -DUSERVER_FEATURE_CRYPTOPP_BASE64_URL=0 -DUSERVER_FEATURE_GRPC=0 -DUSERVER_FEATURE_POSTGRESQL=0 \\\n      -DUSERVER_FEATURE_MONGODB=0 -DUSERVER_USE_LD=gold -DCMAKE_BUILD_TYPE=Release ..\nmake -j$(nproc)\n```\nthe last commands fails with the error message\n```\n[ 24%] Building CXX object userver\/core\/CMakeFiles\/userver-core.dir\/src\/cache\/cache_update_trait_impl.cpp.o\n<command-line>: internal compiler error: Segmentation fault\n\/home\/rbogaveev\/Desktop\/userver_src\/userver\/core\/src\/cache\/cache_update_trait_impl.cpp:342:1: note: in expansion of macro \u2018USERVER_NAMESPACE_END\u2019\n USERVER_NAMESPACE_END\n ^~~~~~~~~~~~~~~~~~~~~\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <file:\/\/\/usr\/share\/doc\/gcc-8\/README.Bugs> for instructions.\nuserver\/core\/CMakeFiles\/userver-core.dir\/build.make:1139: recipe for target 'userver\/core\/CMakeFiles\/userver-core.dir\/src\/cache\/cache_update_trait_impl.cpp.o' failed\nmake[2]: *** [userver\/core\/CMakeFiles\/userver-core.dir\/src\/cache\/cache_update_trait_impl.cpp.o] Error 1\nCMakeFiles\/Makefile2:986: recipe for target 'userver\/core\/CMakeFiles\/userver-core.dir\/all' failed\nmake[1]: *** [userver\/core\/CMakeFiles\/userver-core.dir\/all] Error 2\nMakefile:145: recipe for target 'all' failed\nmake: *** [all] Error 2\n```\n\nHas anyone faced with such issue before?","599":"ok","600":"It found the userver!\nBut I've got huge linkage error: https:\/\/pastebin.com\/C4sPTiDu\nWhat can be a reason?","601":"help me : nomodule named \"jinja2\"","602":"What might happen faster is, userver will be released and uploaded to Conan index","603":"I ask out of curiosity, because nowadays a big trend is Rust.  But I really enjoy the code (so far) of this very powerful C++ framework.   It is almost like a group has gone against the Rust trend somewhat.  :)","604":"Looks like it was because of `ccache`. All became good after I cleaned it.","605":"Together with the SetupEnvironment.cmake?","606":"Perfect. Very informative now","607":"Ok, thanks, waiting! Really needed for our services :)","608":"Are migrations now integrated right to the userver??","609":"Sounds like a nice addition for PostgreSql driver","610":"Thanks\u2026","611":"If I do the `SELECT` like\n\n```auto res = pg_cluster_->Execute(ClusterHostType::kSlave, \"SELECT * from groups.all\");\nauto group = res.asSingleRow<MyGroup>(kRowTag);```\n\nIt works.","612":"Ow, so how am I supposed to use userver?\nI hate using submodules or package managers. For me the easiest way is to install all needed development files and just use it from there, rebuilding it when needed.","613":"Use conan install:)","614":"","615":"Ok, we still don't understand exactly what happened :)\nYou could really help by creating an issue and putting everything there in maximum detail","616":"Of course but later today","617":"Whoops, yes","618":"just curious...\nIs there a real benefit from the LTO?  Especially interesting in the Yandex scale. \ud83d\ude0a","619":"yes it works!","620":"You can build userver once, upload to the local conan registry and include from different services","621":"Just this should be enough, without the one from `ci-conan.yml`","622":"I was checking postgresql\/src\/storages\/postgres\/detail\/non_transaction.cpp, \/postgresql\/src\/storages\/postgres\/detail\/cluster_impl.hpp et al.\n\nThis is the entry point for your Execute:  https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/postgresql\/src\/storages\/postgres\/cluster.cpp#L105\n\nIt then relies on https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/postgresql\/src\/storages\/postgres\/detail\/non_transaction.cpp#L28\n\nI can't see anything in this chain where in the query ($1) would be replaced with (a, b, c).\n\nThe table in question has 3 fields, `uuid`, `name`, `description` so to insert a Group it has to provide some params.\n\nI didn't make the driver but just based on a general understanding of SQL I do not think that the driver is going to expand `INSERT INTO mytbl ($1)` into `INSERT INTO mytbl (field1, field2) VALUES ($a, $b)`.","623":"I build it in docker so all directories will be renewed anyway.","624":"Well, almost all drivers need to deal with C code, it's not a big issue per se. On the `thread_local` part, we may have thread-pinning option for tasks in our \"normal\" `TaskProcessor`s in the near future. No exact ETA, though","625":"Try adding those lines https:\/\/github.com\/userver-framework\/pg_grpc_service_template\/blob\/develop\/CMakeLists.txt#L48-L60\n\nWe're plannojg to take care of the problem till next release","626":"Yes .. ((\nWe research methods how will add new configs and no block another users","627":"Please, provide a link to the complete build log","628":"That can be overriden","629":"They are integrated into the testing framework, so that they are tested in your functional tests. You still have to run pgmigrate on your production (using the already tested migrations)","630":"Hello!\nIs it possible to run only one python test but not all of them? E.g if I have tests\/test_1.py , tests\/test_2.py , can I run only tests\/test_1.py ?","631":"You must add in file `dynamic_config_fallback.yaml` next point: `\"POSTGRES_CONNECTION_PIPELINE_EXPERIMENT\": False`","632":"Try deleting build directory","633":"Let me try again. Maybe I've done something wrong","634":"https:\/\/github.com\/userver-framework\/pg_service_template\/blob\/develop\/src\/hello.cpp#L34","635":"You can use new version docker image with latest packages for platform linux\/amd64\nin image ghcr.io\/userver-framework\/ubuntu-userver-build-base:v1","636":"my protoc --version is libprotoc 22.3","637":"`userver\/conan\/test_p`ackage","638":"It's the normal client-side timeout. Or are you talking about deadline propagation?","639":"Also had to add `USERVER_BAGGAGE_ENABLED`","640":"By the way.\n\n\nIn [Issue #14](https:\/\/github.com\/userver-framework\/userver\/issues\/14) there was talk about adding support for another DBMS.  Some notes were made about why Postgres was more cooperative for async usage.\n\nI wanted to note that the mariaDB does support an async API, and that it does also support bulk transactions in the C connector.\n\nhttps:\/\/kb-mirror.mariadb.com\/kb\/en\/non-blocking-client-library\/\n\n Is this something that would make it more plausible to implement MariaDB driver support?\n\nThat's another large DB audience.","641":"And having a library won't even make the compilation time less because every service must anyway rebuild everything in the CI. So it's more structural change","642":"So there is  a benefit \u0416:-)","643":"I think we will fix this and do python search from brew automatically.","644":"not database, I'm talking about graphql as a rest-api alternative.\n\nhttps:\/\/graphql.org\/","645":"You shouldn't have multiple off-tree builds in a single docker image, should you?","646":"Is it possible to unify the Serialize for any Enum like this?\n\n```template <typename EnumT>\nformats::json::Value Serialize(EnumT data,\n                               formats::serialize::To<formats::json::Value>) {\n    formats::json::ValueBuilder builder;\n    builder = pg::io::detail::EnumerationMap<EnumT>::GetLiteral(data);\n    return builder.ExtractValue();\n}```\n\nSo I don't need to rewrite the same code for every enum I need to serialize.","647":"Looks good so far)\n\nHowever there's always a room for improvement. Tune the firewall to allow outgoing traffic only to addresses that you use, tune the firewall to deny most of the incomming ports. Put your server anto a separate group and user, remove most of the priviliges from those users and forbid access to most of the directories and so forth...","648":"here is an example\n\nhttps:\/\/github.com\/oatpp\/oatpp-swagger","649":"sorry, using: pip3 install pyyaml","650":"but problem in this","651":"I also confused you a bit.\nI tried this with mapping. Without mapping it does not compile","652":"Yep, I understand you, I mean the same","653":"This is where I execute the insert of my type","654":"This was like the first thing I've done. Because @AntonyZhilin patches are applied on top of development branch","655":"Right. So each test, mockserver fixture will wind up a server, you will add a mock using fixture 1, then start the testsuite task using fixture 2, which depends on fixture 1","656":"Crap! It is problem dependency with absl(((","657":"Oh well( \nI give up; i know it is doable, but can't remember the exact wording. Should be google-able i believe","658":"The same error is happening with https:\/\/github.com\/userver-framework\/pg_grpc_service_template\n\nThe command `make docker-cmake-debug` produces the error `Invalid gRPC package`","659":"```cmake_minimum_required(VERSION 3.23)\n\nproject(my_project)\n\nset(CMAKE_CXX_STANDARD 20)\n\ninclude(ExternalProject)\nExternalProject_Add(userver\n        GIT_REPOSITORY https:\/\/github.com\/userver-framework\/userver.git\n        GIT_TAG origin\/develop\n        CONFIGURE_COMMAND USERVER_FEATURE_REDIS ON\n        )\n\nadd_executable(my_project\n        main.cpp)\n\nadd_dependencies(my_project userver)```","660":"And for clickhouse?","661":"File 1:\n\n**dc1.yml\n\n**```version: '3'\n\nservices:\n  serviceone:\n    image: 'node:16.13.0-bullseye'\n    command: bash -c \"sleep infinity\"\n\nnetworks:\n  default:\n    external: true\n    name: mytestoverlay```","662":"Would be glad for a solution of sharing one `.proto` file between services. Seems like the path cannot be on an other level","663":"Hi guys,\n\nI want to use userver with a third-party library, which provides some callback style functions like `do_sth(arg1, ..., callback_fn)`. How should I call these external functions and get results from userver's coroutines? \n\nThanks","664":"Done with the non-SSL websockets. Here's the sample and documentation https:\/\/userver.tech\/d7\/d9e\/md_en_2userver_2tutorial_2websocket__service.html\n\nWorking on SSL-websockets","665":"Is it this PR? https:\/\/github.com\/userver-framework\/userver\/pull\/283\/files\n\nAs far as I can see here the WebSockets are available via WebSocketServer. Will it be possible to use WebSockets with just an HttpServer? In my case I'll need to have REST API mixed with websockets notifications","666":"github issues are fine for bug reporting\n\nHowever, we have an internal bugtracker","667":"Still, try adding `print(service_source_dir.joinpath('db\/schema.sql'))` in `pgsql_local` and let's see what it is","668":"Not sure either how the driver expands $1 which is mapped type `MyGroup`","669":"Corrected my example.\nIt works if I not use my `DBValue`.\nThe DbValue is described here: https:\/\/t.me\/userver_en\/723","670":"Userver is not ment to be \"install\"-able, at least yet.\n\nSo what you are witnessing with amqpcpp is cmake finding INSTALL targets in third-party projects, that come with FetchContent. That's probably an oversight that \"install\" even attempts to do anything","671":"Cool. You're really chill. \nI'm used to seeing contribution guides! \nThanks for clarifying this bit.","672":"Yes! `-- gRPC version: 1.54.2` - search gRPC in Docker working by default!","673":"hello! Please, please show how you run build.","674":"Hi guys.\nI got this log in my service when I did nothing with the service\n\n```tskv  timestamp=2023-04-23T16:19:47.612665  level=WARNING  module=ParseUrl ( third_party\/userver\/core\/src\/server\/http\/http_request_constructor.cpp:128 )   task_id=7FB4BBC2DC00  thread_id=0x00007FB4BF38B640  text=URL \"http:\/\/dyn.epicgifs.net\/test6956.php\" not found```","675":"In our CI we analyze the diff and only build and run tests for the services the PR touches. Or for all services in case of common files changes","676":"and this","677":"please, you need update submodule userver","678":"It works. Thank you once again!","679":"100% tests passed, 0 tests failed out of 40\n\nTotal Test time (real) = 368.21 sec","680":"@alexipro is this the correct one?","681":"We have a huge codebase in C++, Rust does not have seamless support for C++ libraries|code. Most of the errors we deal with today are logical and multithreading errors, Rust does not help with those. Rust does not have a nice exceptions support, the error processing becomes much more difficult.","682":"Hi! You should set your service base url to mocksever see example. Now your trying to access hostname mockserver without url schema.","683":"How is it going with make install btw? \ud83d\ude0a","684":"Errors about both, right?","685":"yes","686":"Thanks for advise I'll check if I can do it.\nODR violations are not possible here tho, since the proto file is defined in one service and the client is also in that service. I think making the library would be the best but I just was lazy and included sources for the client and proto files in other projects without any library","687":"I couldn't find anything in documentation","688":"```cd third_party\/userver\ngit checkout develop\ngit pull```","689":"Ok I'm trying","690":"#digest February, 2023\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0fAdded a Conan option to disable LTO, thanks to [Oleg Burchakov](https:\/\/github.com\/aarchetype) for the PR!\n\n\u25ab\ufe0fRedis driver now supports the `geosearch` and `unlink` commands\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0f [tracing::Span](https:\/\/userver.tech\/d7\/d1a\/classtracing_1_1Span.html) now logs the location where it was constructed\n\n\u25ab\ufe0fNow the `string<>enum` [utils::TrivialBiMap](https:\/\/userver.tech\/d9\/dbf\/classutils_1_1TrivialBiMap.html) mappings could be used within [storages::postgres::io::CppToUserPg](https:\/\/userver.tech\/d3\/d28\/structstorages_1_1postgres_1_1io_1_1CppToUserPg.html). See [uPg: Mapping a C++ enum to PostgreSQL enum type](https:\/\/userver.tech\/de\/da8\/pg_enum.html) for more info\n\n\u25ab\ufe0f [components::Logging ](https:\/\/userver.tech\/d4\/da4\/classcomponents_1_1Logging.html)now provides options for configuring the task processors to do the asynchronous logging\n\n\u25ab\ufe0fDNS resolvers were switched to asynchronous mode by default\n\n\u25ab\ufe0fUDP chaos proxy was implemented, see [chaos.UdpGate](https:\/\/userver.tech\/d8\/de5\/classpytest__userver_1_1chaos_1_1UdpGate.html)\n\n\u25ab\ufe0fC++ Standard now could be explicitly controlled via the CMake flag `CMAKE_CXX_STANDARD`\n\n\u25ab\ufe0fPython dependencies for build are now automatically installed, thanks to [Pavel Shuvalov](https:\/\/github.com\/shuva10v) for the PR!\n\n\u25ab\ufe0fDiagnostic messages and docs were improved, including:\n\n- In case of a typo in static config name the fixed name is now reported\n- error-injection static option for [components::Postgres](https:\/\/userver.tech\/d1\/d92\/classcomponents_1_1Postgres.html) was documented\n- Fixed typos, thanks to [Ch0p1k3 ](https:\/\/github.com\/Ch0p1k3)for the PR!\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0fMany metrics were moved to a faster [utils::statistics::Writer](https:\/\/userver.tech\/d7\/dd9\/classutils_1_1statistics_1_1Writer.html)\n\n\u25ab\ufe0fgRPC now allows concurrent execution of 1 Read and 1 Write on the same Bidirectional stream.\n\n\u2014\n[userver news](https:\/\/t.me\/userver_news)","691":"https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/docker-compose.yml","692":"1 second","693":"Looks like `conan create . --build=missing` should just do everything for me?","694":"I mean. If I have json value like\n```{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\",\n}\n```How can I get all keys that value consists of: [\"key1, \"key2\"] ?","695":"Hello!\nAssuming `res` is a vector of\n```struct MyValue { int id; std::string name; int number };```\n\nthe way to go is to declare a serialization function:\n```formats::json::Value Serialize(\n    const MyValue& data,\n    formats::serialize::To<formats::json::Value>) {\n  formats::json::ValueBuilder builder;\n  builder[\"id\"] = data.id;\n  builder[\"name\"] = data.name;\n  builder[\"number\"] = data.number;\n  return builder.ExtractValue();\n}```\n\nthen building a json value is as simple as\n```formats::json::ValueBuilder builder{res};\nauto json = builder.ExtractValue();```\n\nI would also recommend using the `HttpHandlerJsonBase` class:\nhttps:\/\/userver.tech\/da\/dbe\/classserver_1_1handlers_1_1HttpHandlerJsonBase.html","696":"For me, both are `3.12.4`. It's not the version we are using in production, of course - I'm just lazy to update locally","697":"I did this and I got the error\n\n```Fixture \"mock_grpc_greeter\" called directly. Fixtures are not meant to be called directly,\nbut are created automatically when test functions request them as parameters.```","698":"could you please provide a full error message?","699":"I think that'll be perfect. Thanks.","700":"After adding this into tests\/CMakeLists.txt, getting this error:\n```ImportError: Error importing plugin \"pytest_userver.plugins.service_client\": No module named 'websockets'```","701":"is [this](https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/postgresql\/src\/storages\/postgres\/tests\/arrays_pgtest.cpp#L834) what you looking for?","702":"Hi colleagues!\nDoes userver have anything to convert a string to types?\nLet's say string -> float, string -> uuid , etc.\nThank you!","703":"Perfect! Now I can test this :)","704":"Hi everyone!\nIs it possible to change execute timeout for all Postgres queries?","705":"Hello everyone!\nAfter the update of userver I am getting this error for tests:\n\n```1: ..\/..\/..\/third_party\/userver\/testsuite\/pytest_plugins\/pytest_userver\/plugins\/config.py:240: \n1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n1: \n1: pgsql_local = <testsuite.databases.pgsql.pytest_plugin.ServiceLocalConfig object at 0x7f502d479330>\n1: \n1:     @pytest.fixture(scope='session')\n1:     def userver_pg_config(pgsql_local):\n1:         \"\"\"\n1:         Returns a function that adjusts the static configuration file for\n1:         the testsuite.\n1:         Sets the `dbconnection` to the testsuite started PostgreSQL credentials\n1:         if there's only one `dbconnection` in static config.\n1:     \n1:         @ingroup userver_testsuite_fixtures\n1:         \"\"\"\n1:     \n1:         if not pgsql_local:\n1: >           raise ValueError(\n1:                 'Override the \"pgsql_local\" fixture so that testsuite knowns how '\n1:                 'to start the PostgreSQL database',\n1:             )\n1: E           ValueError: Override the \"pgsql_local\" fixture so that testsuite knowns how to start the PostgreSQL database```\n\nMy config_vars_testing.yaml is described as follows\n\n```worker-threads: 4\nlogger-level: debug\nis_testing: true\ndbconnection: 'postgresql:\/\/testsuite@localhost:15433\/dynconf_service_db'```\n\nWhat am I missing?","706":"Very well could be)\n\nDo you have a reference? Couldn't find the change quickly","707":"With nginx you could terminate https traffic at nginx and forward trafic as http to the service on userver (use nginx as reverse proxy).\n\nSupport for HTTPS server in the framework itself comes soon (we have a PR, it requires some review and polishings)","708":"Got it. I found dbmate useful for migrations in my production","709":"I guess Rust would only be a better fit if your codebase was in C instead of C++, then, because a lot of the 'selling point' of Rust is C compatibility but inconveniently, not c++.","710":"I think that your `InsertOne` idea would have solved most of @vfarme 's problem regarding wanting to insert the custom type almost entirely.  \n\nThey were trying to do  `INSERT INTO mytbl ($1)`  (which still wouldn't work even with this change); however, `INSERT INTO mytbl (field1, field2) VALUES ($1, $2)` would have worked.","711":"No, that shouldn't happen\n\nCan you please provide a cmake log, so i can look into it?","712":"Thanks\n\nMy idea is that PG just unconditionally denies `select ... from $1` because it doesn't know the intention - whether $1 is a table name or an actual data, and using parameters as table names doesn't work with prepared statements, so we need a way to tell PG \"relax, $1 isn't a table name\"\n\nNot sure if this will work with the driver (and sadly can't check myself right now), but it seems to work with psql","713":"In new version docker (in link) yes!","714":"For Serialization, Parse and for query building.\nFor example, serialize impl:\n\n```template<typename Model>\nuserver::formats::json::Value doSerialize(const Model& model)\n{\n    using namespace userver;\n    using namespace storages::postgres;\n\n    formats::json::ValueBuilder builder;\n\n    auto processMember = [&builder](const auto& member) {\n        builder[member.rowName] = member.data;\n    };\n\n    boost::pfr::for_each_field(model, processMember);\n\n    return builder.ExtractValue();\n}\n\n```Instead of enumerating all the members every time, duplicating json keys","715":"Ow thank you. I'll check that out!\nSorry if somebody feels offended, did not mean to sound harsh. just wanted more clarity on things that were proposed here.","716":"I see I had to update requirements.txt as well","717":"There is a minimal example in the docs https:\/\/userver.tech\/dd\/d2c\/md_en_schemas_dynamic_configs.html, but i think it should give a decent understanding of the general idea\n\n> Also are dynamic configs that are special for uservice automatically handled\nThat's the beautiful part - they are. \nObviously some of them only have an effect at the service startup moment, but in general what could be configured dynamically - mostly is","718":"Well, if you just set the version variable or macro, you will disable the warning, but it will likely result in ODR violations (UB)","719":"^\n\nP.S.: we discourage using the classes and functions from `detail` and `impl` namespaces. However, in this case your usage seems OK. It's our fault - we have not provided a nice string<>enum mapping that is usable with postgres. We'll take a look at the issue","720":"No, I have this part.\nEverything works without templates","721":"@antoshkka you could make this into an issue","722":"[This line](https:\/\/github.com\/userver-framework\/service_template\/blob\/802e2c3b5927521e2b145ed1b1ac7ef7b75ded35\/CMakeLists.txt#L4) adds all the inlcude_directories, finds the packages and does the environment setup","723":"```Existing package recipes:\n\nuserver\/1.0.0```","724":"Good evening.\nI just added the http-client into the static config like this:\n```        http-client:\n            threads: 2\n            fs-task-processor: fs-task-processor\n            user-agent: notification_service_client\n\n```And now I'm getting another exception:\n```level=ERROR  module=DoRun ( home\/user\/workdir\/third_party\/userver\/core\/src\/components\/run.cpp:165 )   task_id=0  thread_id=0x00007F946CF5E9C0  text=Loading failed: component with name 'http-client' found in static config, but no component with such name is registered in components::ComponentList in code (std::runtime_error)\n\n```I'm confused now what to do","725":"On ubuntu 20.04, I succeeded compiling, test fails I get an error userver_testsuite_add() not found","726":"and I already installed postgresql","727":"I mean just writing yml for swagger overall. For example, in fastapi I can just describe everything right in router decorators and swagger ui will be automatically generated","728":"Nice!\n\nNot sure if 'CAST' is the best solution here, maybe PG has something more readable for this","729":"#digest December, 2022\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0f Logs colorization to the testsuite plugins, thanks to [Victor Makarov](https:\/\/github.com\/vitek) for the PR\n\n\u25ab\ufe0fA sample of a [Custom Authorization\/Authentication via PostgreSQL](https:\/\/userver.tech\/df\/dd1\/md_en_userver_tutorial_auth_postgres.html)\n\n\u25ab\ufe0f An option `set_tracing_headers` to disable HTTP tracing headers, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fMultiple big improvements in framework testing:\n\n  -  improved unit tests re-entrance\n  -  multiple new chaos and metrics tests\n  -  improved testsuite diagnostics\n\n\u25ab\ufe0fFixed race in RabbitMQ sample, thanks to [Ivan Trofimov](https:\/\/github.com\/itrofimow) for the PR\n\n\u25ab\ufe0fFixed PostgreSQL testing at Githu","730":"Ok first error fixed. There is the second one","731":"Ok, thanks!","732":"When the query is executed at first time we implicitly transform it into a prepared statement.\n\nAll the query executions just send the parameters in binary format and prepared statement id, without the query repetition.","733":"Hm, it's still not working. Now build failed\n```gmake[3]: *** No rule to make target '..\/authorization_service\/proto\/auth.pb.cc', needed by 'CMakeFiles\/groups_service_auth_proto.dir\/authorization_service\/proto\/auth.pb.cc.o'.  Stop.```","734":"Yeap)","735":"In general PG driver only knows how to serialize values into binary pg protocol format.\n\nAlthough it should be doable to teach driver how to serialize into human-readable format, its not exactly straightforward, and also imposes a security threat - one doesn't want to accidentally leak sensible data into logs\n\nI think your best shot is to log explicitly","736":"how can I find my local `zlib_INSTALL` ?\nIs it the path where userver was installed after running `make  userver` ?","737":"Ngl you caught me off guard with this","738":"same thing","739":"Thanks, that works!","740":"by the way there are so many dependencies, are you not afraid of a supply chain attack? @antoshkka","741":"Example is to come soon (probably this month). However, we have no oauth classes ready out of the box","742":"I mean I cannot really see how the driver expands $1, can I?","743":"Yes","744":"Then, suppose you have two compose files, dc1.yml and dc2.yml","745":"Thanks! I will try to learn it.","746":"Also it ignores\n`CMAKE_INSTALL_PREFIX` and `ENV PREFIX` when installing. And always trying to install it to the `\/usr\/local\/lib`\n```INSTALL cannot copy file\n  \"build_debug\/third_party\/clickhouse-cpp\/clickhouse\/libclickhouse-cpp-lib.so\"\n  to \"\/usr\/local\/lib\/libclickhouse-cpp-lib.so\": Permission denied.```","747":"Try this patch (attempt #3 :) )\nhttps:\/\/pastebin.com\/Pq8115mD","748":"Some unforgivable curses involved indeed","749":"Are you planning to add it then ?","750":"> Numerous build improvements, including Conan and Docker support.\n\nIsn't it?","751":"Add this https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/samples\/hello_service\/dynamic_config_fallback.json#L2\ninto your dynamic config fallback.\n\nThis being an error is an unfortunate consequence of how we manage fallback configs, working on it.","752":"I solved this problem for now by placing the schema.sql into a separate path without any other subdirs\/files. But I found it strange that I cannot just specify a full path","753":"Yes, here's a converter to arithmetic types https:\/\/userver.tech\/d6\/d84\/namespaceutils.html#a152f8f53450585b7f2a8defff6d6d181\n\nFor uuid there is a solution right in Boost https:\/\/www.boost.org\/doc\/libs\/1_73_0\/libs\/uuid\/doc\/uuid.html#boost\/uuid\/string_generator.hpp","754":"Not much. It's a good idea to discuss your plan here to make sure the efforts don't go to waste. Create a PR, we'll review it at some point. Make a post here to get some discussion or priority review","755":"There is a `GetName` on iterator, so either for on begin->end or `for (const auto& [key, value] : Items(json))`, where `Items`` is https:\/\/github.com\/userver-framework\/userver\/blob\/a3d462df498a75ffa1f7e96a677eb97e66fe6341\/shared\/include\/userver\/formats\/common\/items.hpp#L68","756":"Would appreciate for the help with this question as well.\nThe problem is that I added creating schema and tables into the `postgresql\/schemas\/service_db.sql`.\nThen I run my service via `docker-compose` and trying to use the database.\nWhen I'm trying to use the database I am getting the error `Fatal error occured: ERROR:  relation \"users.all\" does not exist` (users.all is from the `service_db.sql`).\nI could not find any info whether I should create the database myself using the `service_db.sql` or the service is doing it itself during the execution time? Because for `userver_dynconf` it is working without any manual actions from me.","757":"There are some plans to simplify DB interactions, but not for this year. If you have ideas on how such an ORM should look like, we'd appreciate a prototype\n\nAbout DB supprot - our nearest plans is to ad YDB support","758":"Unfortunately it didn't work. the problem is the same","759":"`include(YOUR_USERVER_SOURCES\/cmake\/SetupEnvironment.cmake)`\nThis is ugly, but will pass for now","760":"Hello everyone.\nWhen I'm building userver as a submodule via `cmake .. && cmake --build .`I am getting userver compilation error because of `-Werror=pedantic` flag enabled. How can I set this flag to false for userver?","761":"You could take any nginx\/cgi\/server guide and apply the generic hardenings","762":"I'd advise against `-o:shared=true`, though","763":"Do the same but for `AddGoogleTests.cmake`","764":"We have new version userver and In the new version, everything works out of the box","765":"","766":"That worked :)","767":"pip3 install yaml","768":"Docker build that released 2 months ago?","769":"Hello.\nHow can I check an output of Python tests via usual `print`?\nWhen I run tests I just see if it's passed or not along with errors. But if I try to `print` something it's not showing it.","770":"If you can't find it, try this.\n\nfind \/ -name \"postgresql*\" 2>\/dev\/null","771":"I don't see any other way suitable for me to use userver as of now","772":"Ok so I do exactly this but didn't even think about it","773":"Okey. Thanks you","774":"I did a build on December 18th using that same file.  I initially ran into some issues because I was trying to do so as `root`, but then I started over as a regular user and was able to provide a build with passing tests.\n\nI posted some notes on that same day, which worked great for me with my situation; including the approx time that each step took to run; [here is a link to that message in case it is helpful for you](https:\/\/t.me\/userver_en\/359)","775":"Do you mean checking out to the develop branch?","776":"It's still there","777":"or apt install python3-jinja","778":"Another option is to make a python function that adds the necessary headers","779":"\ud83d\ude00 thank you, I try now","780":"#digest July-August, 2022\n\n\ud83d\udccc**Optimized internals:\n\n**\u25ab\ufe0f`WaitListLight` now never calls `std::this_thread::yield()\n\n`\u25ab\ufe0fmore lightweight queues are now used in HTTP server\n\n\u25ab\ufe0fsmaller critical section in `TaskContext::Sleep()`, improved performance for many synchronization primitives \n\n\u25ab\ufe0f `std::unique_ptr` now holds the payload in `engine::Task`, rather than` std::shared_ptr`. Thanks to the [Stas Zvyagin](https:\/\/github.com\/szvyagin-gj) for the idea and draft PR\n\n\u25ab\ufe0fsimplified and optimized `FdControl`, resulting in less CPU and memory usage for sockets, pipes and TLS","781":"The above error is generated when I run sudo make build-debug","782":"Thanks. But still...","783":"I cleaned the dir completely and tried to rebuild with `AddGoogleTest.cmake` included.\nI got this now\n```CMake Error at tests\/CMakeLists.txt:1 (include):\n  include could not find requested file:\n\n    UserverTestsuite\n\nCMake Error at tests\/CMakeLists.txt:10 (userver_testsuite_add):\n  Unknown CMake command \"userver_testsuite_add\".```","784":"Did you change also something in grpc? Got this runtime error:\n\n```1: ERROR    <userver> Loading failed: Field 'components_manager.components.grpc-auth-service.middlewares' is missing (userver::formats::yaml::MemberMissingException)\n1: Unhandled exception in components::Run: Field 'components_manager.components.grpc-auth-service.middlewares' is missing```","785":"os: ubuntu 22.04\nsystem params: 4 core, mem 4 GB,\ndocker engine: v 20.10.18","786":"What do you mean by `mapped type` then exactly?","787":"Alternative idea: instead of making a JSON in C++, you could ask Postgres to do that and just return string from the postgres directly\n\nP.S.: we'd still appreaciate the full error message. We love making our code better and simpler to use :)","788":"If you have multiple apps, a very simple Dockerfile like this in each of those can \"create a Docker build using the src directory of each app\" assuming Dockerfile lives adjacent to the source of each app.\n\nThe underlying UServer build is re-used in all of them since they're all starting from the same `FROM` tag","789":"I mean from the project structure perspective. How are you gonna include your built userver into your project to link against it?","790":"Hi, is this only happening with ampq? Please try disabling it using `-DUSERVER_FEATURE_RABBITMQ=OFF` and installing again. Before that clean the cmake cache and the build directory just in case","791":"Before running `cmake` on a conan project (and `test_package` is one of those) you need to initialize it","792":"Could you try this for me?\n`insert into ... select * from CAST($1 AS groups.all)`","793":"Ubuntu 22.04","794":"What's the secret to running a successful `docker-compose run --rm userver-tests` from [the Docker tutorial](https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#docker)?\n\nFresh clone, fresh attempt to run the command:  https:\/\/pastebin.com\/Py5v0FE2","795":"Great that works, thank you!\nMust that mock be in conftest.py only?","796":"Will be added in a few weeks","797":"","798":"The [**userver framework](https:\/\/github.com\/userver-framework)** chat for English-speaking audience\n\n**Invite link: **https:\/\/t.me\/userver_en\n**Our news:** https:\/\/t.me\/userver_news**\n\u0421hat for Russian-speaking audience:** https:\/\/t.me\/userver_ru","799":"Congrats! Waiting for the `make install` or at least `conan`!","800":"Not sure how it should work exactly. Would be glad for some more detailed example","801":"No, here you are inserting array into a column that is also array.\nIn my case I want to insert multiple rows from an array.","802":"Pretty much, yes","803":"Another question\nCan I just send a client get request using url without creating my own yaml_config file ?","804":"For `CMakeLists`, see `userver\/conan\/test_package`","805":"Try cleaning the build directory and caches. We moved `userver\/shared -> userver\/universal`, which made build caches stale","806":"I see, thanks a lot for the information. To confirm that I understand correctly:\n\nIn my service, I won't create the background Task if testsuite_tasks.IsEnabled(). Instead, I'll use TestsuiteTasks to register a Task that can be called\/spawn asynchronously (using `spawn_task`) during testing. Does this make sense?","807":"what module is this","808":"Guys, question.\nApparently I cannot use the userver docker anymore because of this failure when trying to apt-get update\n\n#0 0.799 Err:7 https:\/\/repo.clickhouse.com\/deb\/stable main\/ Release\n#0 0.799   404  Not Found [IP: 172.66.43.7 443]\n\nAny solutions?","809":"OK,","810":"Previously I was advised here to add this flag `-DUserverGrpc_VERSION=1.51.0`","811":"","812":"Thanks for example. Another question occurred. Should I find myself all the paths to include dirs and set them in `target_link_directories` or userver already has some defined variables for paths ?","813":"#digest June, 2023\n\n\ud83c\udd95 **Added:\n\n**\u25ab\ufe0fStatic configs of the service now can retrieve environment variables via the `#env` syntax. See [yaml_config::YamlConfig](https:\/\/userver.tech\/d3\/d6c\/classyaml__config_1_1YamlConfig.html) for more examples.\n\u25ab\ufe0fNew testsuite plugins [userver_config_http_client](https:\/\/userver.tech\/dc\/db7\/group__userver__testsuite__fixtures.html#ga900b1efd413cdb3cda3065e2efff19aa) and [userver_config_testsuite_support](https:\/\/userver.tech\/dc\/db7\/group__userver__testsuite__fixtures.html#ga0cb584eb5dea6c6117a71c7713ec5fb5) turned on by default to increase timeouts in tests and make the functional tests more reliable.\n\u25ab\ufe0fgRPC now can write access logs, see access-tskv-logger static option of [ugrpc::server::ServerComponent](https:\/\/userver.tech\/d7\/d9a\/classugrpc_1_1server_1_1ServerComponent.html).\n\u25ab\ufe0fNow the waiter is allowed to destroy the [engine::SingleConsumerEvent](https:\/\/userver.tech\/d8\/d87\/classengine_1_1SingleConsumerEvent.html) immediately after exiting WaitForEvent, if the wait succeeded.\n\u25ab\ufe0fNew [dynamic_config_fallback_patch](https:\/\/userver.tech\/dc\/db7\/group__userver__testsuite__fixtures.html#ga1b4c9568c08ba353940cc192cf02dd22) fixture could be used to replace some dynamic config values specifically for testsuite tests.\n\u25ab\ufe0fFixed [utils::SmallString](https:\/\/userver.tech\/d8\/d11\/classutils_1_1SmallString.html) tests, thanks to [Chingiz Sabdenov](https:\/\/github.com\/GestaltEngine) for the PR!","814":"You're not the first :) We'll try to make the messages more noticeable","815":"\ud83e\udd26\ud83c\udffcsorry, I should look into PR","816":"Changes for the last few weeks in open source:\n* Removed multiple broken and internal links; removed internal git submodules\n* AArch64 now compiles and pass tests\n* [WaitAny](https:\/\/userver-framework.github.io\/dc\/db7\/group__userver__concurrency.html#gafe29f85e5a5dd200efb8664f32e5defd) now can wait for non-coro futures (HTTP futures)\n* Added optimizations for PostgreSql and HTTP handlers\n* **Many** **thanks** to all the contributors, Arch Linux is now properly supported!\n\nPlans for the next weeks:\n* Make Docker images and remove internal docker-compose\n* Add administration web page for uservice-dynconf\n* Improve docs","817":"Actually, the service template docker compose already has a binding to a CCACHE_DIR","818":"in the conftest.py?","819":"In my build directory under `build\/proto` I see the file `auth_pb2_grpc.py`","820":"yes","821":"I don't understand why `service_template\/CMakeLists.txt` is correct without `inlcude_directories` and `target_link_directories` ?","822":"By the way, I am also very interested sometimes to see, what sql query goes into the database. Like with values already instead of placeholders, Is it possible?","823":"Hi everyone!\nis there a way to see sql statement in log?","824":"This is very strange because `UserverGrpc_FOUND=TRUE`","825":"So in effect, if you have multiple invocations of the `docker-compose` rolling around (for different projects, whatever), you could link them all to the same central ccache dir and thus basically do the 'ccache' trick; \n\nThe first build would be the \"long \" one\n\nSubsequent invocations that all link back to the same ccache wouldn't \"re-build all of userver\" at that point.\n\nThat's a pretty good compromise IMO if the fear is build times across multiple projects","826":"I tried to troubleshoot the problem, I think the protoc version I installed may be too new","827":"Does your mapped type have the Introspect()?","828":"we do, but right now it's in a broken state due to what seems to partly be their recent Citrine upgrade and us changing the base image\n\nimage is fixed, but this https:\/\/github.com\/TechEmpower\/FrameworkBenchmarks\/issues\/8203 remains\n\nP.S.\nUserver is unlucky to start with `u`, thus being one of the very last frameworks tested in runs, so every change takes at least a week before results are available.\nThere also are some strange things happening in tfb docker environment when running locally, i'm investigating that in my spare time","829":"make build-debug","830":"oh, no ....  ERROR: Could not find a version that satisfies the requirement yaml (from versions: none)","831":"Yes! Thank you!","832":"Thanks\n\nWill look into it tomorrow","833":"Are you really need to build Conan test_package? It'll build only with userver package as a test, it's not an example or smth else. \nIf you wanna use userver with Conan in your project, you need to execute conan install with generator and then you should use generated cmake file in your cmakelists.\nConan now is experimental and something may go wrong. It is a reason why no docs for Conan.","834":"Hello!\nI see there is an `auth` namespace in userver, but there is no examples of how to use it. Can I use it somehow for oauth?","835":"pip3 install yaml doesn't work .it show  ERROR: Could not find a version that satisfies the requirement yaml (from versions: none)","836":"If the build was created from the same source that the submodule would've run, then, it may work","837":"Hello again. I want to use ready-made template on Docker. I'm going through the article on Medium. But when I say make docker-test-debug I get an error.","838":"Nothing works.\nThank you for trying.\nMaybe userver just not designed to do so?","839":"Hi everyone.\nIs it possible to move userver logs like this into `DEBUG` level instead of `INFO` level?\nThere are really too much logs from userver coming. It's hard to understand anything.\nAt the same time I want to log some things in the server that are `INFO`, not warnings. And my logs are literally lost in userver logs :)\n\n```tskv  timestamp=2023-04-19T23:07:53.255349  level=INFO  module=MakeQuerySpan ( home\/user\/workdir\/third_party\/userver\/postgresql\/src\/storages\/postgres\/detail\/connection_impl.cpp:572 )   task_id=7F9821C3E880  thread_id=0x00007F9827FFF640  text=  stopwatch_name=pg_query  total_time=0.977879  span_ref_type=child  stopwatch_units=ms  start_timestamp=1681934873.254351  libpq_wait_result_time=0.923638  libpq_send_query_prepared_time=0.042100  pg_exec_time=0.000190  trace_id=40e57a778b9a4e04b33893e68c1d95f5  span_id=7a2b5a182440cf5e  parent_id=35f5e980f4ef3be3  link=5bfa7c44f4cf4de994cae999e92a5d05  db_type=postgres  pg_conn_id=4  db_instance=service_db  peer_address=services.project.net:5435  db_statement=SELECT 1 AS ping```","840":"pgmigrate - yes, we run it from an internal admin panel","841":"In our internal CI we use docker containers with a central ccache. While different services are being built, as long as the userver version does not change, it's just taken from ccache, zero cost","842":"P.S.: pay attention in with file\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/develop\/scripts\/docker\/prepare_image.sh\nHe prepared data before run docker build","843":"I had same problem run your userver by adding docker user and inside virutal environment should help","844":"Correct","845":"1. add file `userver\/cmake\/get_gRPC_version.cpp\n`https:\/\/pastebin.com\/p4tVBZXe\n\n2. add to `userver\/cmake\/SetupGrpc.cmake` after line 15\nhttps:\/\/pastebin.com\/EXFNRqNk","846":"I am new to python, thank you for your patience","847":"```\"POSTGRES_CONGESTION_CONTROL_SETTINGS\": {}```","848":"#digest April, 2023\n\n\ud83c\udd95**Added:**\n\n\u25ab\ufe0fMySQL driver was added, see [MySQL Driver - EXPERIMENTAL](https:\/\/userver.tech\/db\/d3d\/mysql_driver.html)\n\n\u25ab\ufe0fExperimental support for HTTP \"Baggage\" header is implemented, including verification, forwarding from HTTP handlers to client, baggage manipulation. See [baggage::BaggageManagerComponent](https:\/\/userver.tech\/d5\/d40\/classbaggage_1_1BaggageManagerComponent.html) for more info\n\n\u25ab\ufe0f [utils::FilterBloom](https:\/\/userver.tech\/d2\/d40\/classutils_1_1FilterBloom.html) was merged in along with initial SLRU cache implementations. The work is a part of the [Yandex backend development school ](https:\/\/academy.yandex.ru\/schools\/backend)course project by [Leonid Faktorovich](https:\/\/github.com\/LeonidFaktorovich), [Alexandr Starovoytov](https:\/\/github.com\/stewkk), [Ruslan,](https:\/\/github.com\/raslboyy) Egor Chistyakov from [PR #262](https:\/\/github.com\/userver-framework\/userver\/pull\/262)\n\n\u25ab\ufe0fInitial support for [utils::statistics::Rate](https:\/\/userver.tech\/d2\/d1b\/structutils_1_1statistics_1_1Rate.html) metrics type\n\n\u25ab\ufe0fHuman-readable \"pretty\" format ([utils::statistics::ToPrettyFormat](https:\/\/userver.tech\/d0\/d09\/pretty__format_8hpp.html#aaa5209f487ab1e6b1f5393e41ca5d00a)) for metrics output was added to the [server::handlers::ServerMonitor](https:\/\/userver.tech\/dc\/d10\/classserver_1_1handlers_1_1ServerMonitor.html)\n\n\u2b50\ufe0f**improved the functionality**:\n\n\u25ab\ufe0fRedis driver now supports non-queued variants for pubsub\n\n\u25ab\ufe0fRedis driver now supports read-only transactions\n\n\u25ab\ufe0fHTTP request decompression is now ON by default in [server::handlers::HandlerBase](https:\/\/userver.tech\/d1\/ddc\/classserver_1_1handlers_1_1HandlerBase.html)\n\n\u25ab\ufe0f [dynamic_config::Source](https:\/\/userver.tech\/d1\/d22\/classdynamic__config_1_1Source.html) now allows subscribing to a particular dynamic config variable changes\n\n\u25ab\ufe0fMultiple improvements for docs, including mockserver clarifications from [Victor Makarov](https:\/\/github.com\/vitek)\n\n\ud83d\udccc**Optimized internals:**\n\n\u25ab\ufe0f Don't issue tail `writev` for empty `io_vec` on bulk socket writes\n\n\u25ab\ufe0fAll the userver metrics are now written via the fast [utils::statistics::Writer](https:\/\/userver.tech\/d7\/dd9\/classutils_1_1statistics_1_1Writer.html)\n\n\u25ab\ufe0f`x2-x50` faster serialization of unique maps into [formats::json::ValueBuilder](https:\/\/userver.tech\/d2\/daa\/classformats_1_1json_1_1ValueBuilder.html)\n\n\u25ab\ufe0f [utils::StrIcaseHash](https:\/\/userver.tech\/db\/df9\/classutils_1_1StrIcaseHash.html) became slightly faster\n\n\u25ab\ufe0f [engine::Task](https:\/\/userver.tech\/d8\/d7c\/classengine_1_1Task.html) now does not have a virtual destructor. New [engine::TaskBase](https:\/\/userver.tech\/d5\/d4b\/classengine_1_1TaskBase.html) based hierarchy does not use RTTI, resulting in smaller binaries\n\n\ud83d\udcbb** Build changes:**\n\n\u25ab\ufe0fImproved support for Conan 2.0, many thanks to [Anton](https:\/\/github.com\/Jihadist) \n\n\u25ab\ufe0f`.gitattributes` now handles line endings automatically for files detected as text. This simplifies WSL builds. Thanks to [Anatoly Shirokov](https:\/\/github.com\/anatoly-spb) \n\n\u25ab\ufe0fPostgreSQL libs selection is now possible in CMake if the platform has multiple versions installed, see [PostgreSQL versions](https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#POSTGRES_LIBS) for more info\n\n\u25ab\ufe0fImproved support for Arch Linux, many thanks to [Konstantin Goncharik](https:\/\/github.com\/botanegg)\n\u2014\n[userver news](https:\/\/t.me\/userver_news)","849":"userver denies to proxy that request to `www.some.bad.url`, so the bad thing does not happen","850":"So now for my projects I'll have to add 2 additional includes \n\ninclude(SetupProtobuf)\ninclude(SetupGrpc)\n\n?","851":"well thank you for answering all my questions so far.  As you can probably see I'm very interested in the project","852":"And how to use it during compilation? Is there CMakeLists example?","853":"I installed postgresql@15 by using homebrew","854":"Solved adding the `--net=host` to the docker run command","855":"Do you have a contribution guide?","856":"Now it's `Invalid gRPC package`","857":"Hey everyone. Hope you all are doing well. \n\nJust so you know, at my workplace we\u2019ve decided to take on UServer. We\u2019re looking for help porting an existing codebase to tap into this awesome new technology. \n\nWe have a sports betting backend that is written mostly in Qt 5. We\u2019re looking to port it to UServer and modernize the whole thing to C++20 in the process. That\u2019s the gist :)","858":"brew install libpq\nbrew install postgresql","859":"How long did it take to get to the point the framework is at now?","860":"Hi, thanks for the interest in userver!\nIf you want to contribute, create a pull request in github (https:\/\/github.com\/userver-framework\/userver\/pulls), it's that simple.","861":"Happy to help\n\nProbably should be more noticeable in the docs","862":"Upd: sorry forgot to mention that I deleted Makefile.local as well","863":"I could give it a try, as i see some possibilities yet unexplored, but not until tomorrow sadly","864":"insert at least works like this\n```->Execute(\"INSERT INTO groups.all (name) VALUES ($1.name)\", myGroup)\n\n```But select not...","865":"Now I've got problems with `WHERE` query...\nI am trying to do it like this\n```->Execute(\"SELECT * FROM groups.all WHERE name=$1.name\", myGroup);\n```And this does not work. Do you maybe have any ideas how to implement such `WHERE` ?","866":"userver was founded in ~2017 as an internal Yandex.Taxi library","867":"Yes. And I declare Serialize in the cpp file where I use this serialization (after including enums.hpp), I don't see how it can be a visibility issue","868":"Good point, we'll try to provide more diagnostic","869":"By the way, have you tried a ready-to-use service template https:\/\/github.com\/userver-framework\/service_template\nJr it does not suit your needs?","870":"Getting the same error.\nIt's basically `include(..\/userver\/cmake\/SetupEnvironment.cmake)` for me","871":"Seems to me that it's a PG-side something we are missing here\n\nAnyway, that's upsetting, but please don't hesitate to share a solution if you find one","872":"oh you mean print that","873":"We are. AFAIK there is no ETA yet","874":"Are you using grpc in tests? If no - just do not import it","875":"Yes, we are using it in many many services","876":"Try `print`ing the path, perhaps it's not what you expected","877":"With my poor knowledge of CMake I think I should include these paths(necessary ones for my project)","878":"I'll think on this a bit.\n\nMariaDB has a native C++ connector (to which I've contributed in an indirect way) but that only has batch processing, not a declared async interface.\n\nThe 'C' connector is the one that has \"all the features.\"  However, dealing with raw C code in the C++17 or greater context may cause other complications.","879":"I created a new path \"postgresql\" and copied there`schema.sql`and specified this path \"posgresql\" in the `find_schemas` and it worked. But in the `db` path I have also path `migrations` and when I specify the `db` in `find_schemas` I am getting this error:\n```1: pgsql_local = <testsuite.databases.pgsql.pytest_plugin.ServiceLocalConfig object at 0x7efd1bbe0970>\n1: \n1:     @pytest.fixture(scope='session')\n1:     def userver_pg_config(pgsql_local):\n1:         \"\"\"\n1:         Returns a function that adjusts the static configuration file for\n1:         the testsuite.\n1:         Sets the `dbconnection` to the testsuite started PostgreSQL credentials\n1:         if there's only one `dbconnection` in static config.\n1:     \n1:         @ingroup userver_testsuite_fixtures\n1:         \"\"\"\n1:     \n1:         if not pgsql_local:\n1:             raise ValueError(\n1:                 'Override the \"pgsql_local\" fixture so that testsuite knowns how '\n1:                 'to start the PostgreSQL database',\n1:             )\n1:     \n1:         if len(pgsql_local) > 1:\n1: >           raise ValueError(\n1:                 f'Found more than one entry in \"pgsql_local\": '\n1:                 f'{list(pgsql_local.keys())}. '\n1:                 f'The \"userver_pg_config\" fixture supports '\n1:                 f'only one entry in \"pgsql_local\" fixture. The '\n1:                 f'\"userver_pg_config\" fixture should be overridden and '\n1:                 f'the \"dbconnection\" for the components::Postgres '\n1:                 f'components should be adjusted via the overridden fixture.',\n1:             )\n1: E           ValueError: Found more than one entry in \"pgsql_local\": ['schema', 'migrations']. The \"userver_pg_config\" fixture supports only one entry in \"pgsql_local\" fixture. The \"userver_pg_config\" fixture should be overridden and the \"dbconnection\" for the components::Postgres components should be adjusted via the overridden fixture.```","880":"Hello everyone.\nI have a question regarding mocking grpc service.\nLet's take the example from the doc (https:\/\/userver.tech\/dd\/d4c\/md_en_userver_tutorial_grpc_service.html):\n```    @mock_grpc_greeter('SayHello')\n    async def _mock_say_hello(request, context):\n        return greeter_protos.GreetingResponse(\n            greeting=f'Hello, {request.name} from mockserver!',\n        )\n\n```It works just fine.\nIn my own mock I have some more logic in this mock function and I have lots of tests that are using the same logic for this mock.\nSo I want to move this mock to a library and use it from (almost) every test. Can I do it somehow?","881":"\/opt\/homebrew\/Cellar\/postgresql@15","882":"Should happen this year","883":"You must drop Makefile.local file in root template","884":"Yes, here's a manual https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#docker","885":"No. This does not work. I am getting a compile-time error:\n\n```\/home\/user\/workdir\/groups_service\/..\/authorization_service\/src\/client\/auth_client.hpp:4:10: fatal error: auth_client.usrv.pb.hpp: No such file or directory\n    4 | #include <auth_client.usrv.pb.hpp>```","886":"~~a rant about SQL being terrible\n~~lets try these:\n1. ($1)\n2. select .* from $1\n3. select .* from ($1)\n\nif nothing works i don't know","887":"There is no need to have UServer on \/usr\/local\/lib or any other dir on the host if you're running everything in containers.  So if your team already uses container builds, or wants to get into that, the container approach is a viable option.\n\nIt is true, this wouldn't be helpful if you intend on doing all dev and deployment directly on a host that doesn't use containers.","888":"BUT - if you intend on doing \"many microservices\",  containers is definitely something to look into, from a monitoring, deployment, maintenance perspective.","889":"Ok, thank you for help","890":"There are `SELECT` examples in [tests\/composite_types_pgtest.cpp](https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/postgresql\/src\/storages\/postgres\/tests\/composite_types_pgtest.cpp), but none for `INSERT`","891":"Ah, I'll let `@i_trofimow` help you with that","892":"So what do you recommend for rbac?","893":"and pay attention in this file\nhttps:\/\/github.com\/userver-framework\/userver\/blob\/ef6cd42b3fd530b97c609ad5c5487924632b855c\/Makefile#L10-L18\n\nand this docs\nhttps:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html#macos","894":"something with python now","895":"Maybe also the documentation should notice it somewhere","896":"@alexipro please, help with docker ^","897":"One more question.\nCan I use testpoints in the grpc service?","898":"Now it says \n\n```CMake Error at \/home\/user\/workdir\/third_party\/userver\/cmake\/GrpcTargets.cmake:18 (message):\n  Invalid Protobuf package```","899":"Hi!\nYes, it is. Thank you!","900":"We have to distinguish PG type my_struct (1 field) and my_struct that contains two fields","901":"The driver doesn't do that, as it shouldn't - it's a prepared statement syntax, so the driver just serializes whatever is passed into it and all the expansion is done server-side\n\nOr did i missunderstand you?","902":"https:\/\/pastebin.com\/2Hn2aYMC","903":"error: taxi\/uservices\/userver\/grpc\/CMakeLists.txt: No such file or directory","904":"Need some help. After pulling the latest userver version I am getting this error during CMake generator:\n\n```CMake Error at \/home\/user\/workdir\/third_party\/userver\/cmake\/GrpcTargets.cmake:18 (message):\n  Invalid Protobuf package```","905":"I cloned this template https:\/\/github.com\/userver-framework\/pg_service_template and made some modifications described in the patch.\nRunning the service via `make docker-start-service-debug`","906":"missing lib yaml-cpp-dev,where should I go to get it? I have libyaml on my computer","907":"Hi everyone.\n\nI'm pleased to announce that we've just landed a MySQL driver for userver.\n\nIt's been some unforgettable nights tracking for bugs in MariaDB client library and enjoying MySQL server violating its own protocol, but nonetheless the driver is finally here and it works in CI, on my machine, and survives some very heavy benchmarking.\nThe driver is in its early alpha stage and i personally wouldn't recommend using it in mission-critical production just yet, but any feedback\/bug reports\/feature requests are much appreciated, as always.\n\nThe documentation is here https:\/\/userver.tech\/db\/d3d\/mysql_driver.html, and please don't hesitate to ask for clarification\/samples if some things aren't clear enough","908":"Got it, thanks guys","909":"Is it safe to use engine::Future from external threads?","910":"Hi everyone!\nI am trying to add the proto file into the CMakeLists.txt like this:\n\n```include(GrpcTargets)\nadd_grpc_library(${PROJECT_NAME}_auth_proto PROTOS ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\/auth.proto)\n\n```And getting this error:\n\n```\/home\/user\/workdir\/project\/authorization_service\/proto\/auth.proto: File does not reside within any path specified using --proto_path (or -I).  You must specify a --proto_path which encompasses this file.  Note that the proto_path must be an exact prefix of the .proto file names -- protoc is too dumb to figure out when two paths (e.g. absolute and relative) are equivalent (it's harder than you think).\n\n```How can I fix this?","911":"@vfarme Is it working?","912":"Hey guys.\nTrying to build new userver in userver docker. Getting now this error:\n\n```STDERR:\n\nCMake Error at \/usr\/share\/cmake-3.22\/Modules\/FindPackageHandleStandardArgs.cmake:230 (message):\n  Could not find `Nghttp2` package.\n\n    Debian: sudo apt update && sudo apt install libnghttp2-dev\n\n    MacOS: brew install nghttp2\n\n    ArchLinux: sudo pacman -S libnghttp2\n\n   (missing: Nghttp2_LIBRARIES Nghttp2_INCLUDE_DIRS) \nCall Stack (most recent call first):\n  \/usr\/share\/cmake-3.22\/Modules\/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)\n  build_release\/cmake_generated\/FindNghttp2.cmake:67 (find_package_handle_standard_args)\n  \/home\/user\/workdir\/third_party\/userver\/core\/CMakeLists.txt:111 (find_package)```","913":"Ok, will try in a bit.\nBut in my projects I also have clickhouse disabled as I don't need it","914":"Run cmake with additional `-DLTO_CACHE=OFF` option\nIt should help","915":"https:\/\/github.com\/userver-framework\/userver\/pull\/217\n@i_trofimow is doing some tremendous work here","916":"Thank you very much!\nOne question: can the `Serialize` function be declared in the anonymous namespace?","917":"Or is it `conan package`? I think it's `conan package`","918":"About http-client or dynamic-config-fallbacks?","919":"Ok next problem.\nWhen starting the test I am getting this error. What do I need to do about it?\n\n```1: ==================================== ERRORS ====================================\n1: _________________________ ERROR at setup of test_auth __________________________\n1: \n1:     @pytest.fixture(scope='session')\n1:     def auth_protos():\n1: >       return grpc.protos('auth.proto')\n1: \n1: ..\/..\/tests\/conftest.py:22: \n1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n1: \/usr\/local\/lib\/python3.10\/dist-packages\/grpc\/_runtime_protos.py:100: in protos\n1:     return _call_with_lazy_import(\"protos\", protobuf_path)\n1: \/usr\/local\/lib\/python3.10\/dist-packages\/grpc\/_runtime_protos.py:62: in _call_with_lazy_import\n1:     return fn(protobuf_path)\n1: \/usr\/local\/lib\/python3.10\/dist-packages\/grpc_tools\/protoc.py:82: in _protos\n1:     module = importlib.import_module(module_name)\n1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n1: \n1: name = 'auth_pb2', package = None\n1: \n1:     def import_module(name, package=None):\n1:         \"\"\"Import a module.\n1:     \n1:         The 'package' argument is required when performing a relative import. It\n1:         specifies the package to use as the anchor point from which to resolve the\n1:         relative import to an absolute import.\n1:     \n1:         \"\"\"\n1:         level = 0\n1:         if name.startswith('.'):\n1:             if not package:\n1:                 msg = (\"the 'package' argument is required to perform a relative \"\n1:                        \"import for {!r}\")\n1:                 raise TypeError(msg.format(name))\n1:             for character in name:\n1:                 if character != '.':\n1:                     break\n1:                 level += 1\n1: >       return _bootstrap._gcd_import(name[level:], package, level)\n1: E       ModuleNotFoundError: No module named 'auth_pb2'```","920":"Oh that's amazing!","921":"https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/samples\/grpc_service\/tests\/test_grpc.py\nIn the example, you can see the usage of a testsuite gRPC server mock (testing the client-side implementation in the service), then a usage of Python gRPC client (testing the server-side implementation in the service). You can totally only use gRPC to talk to the service in testsuite","922":"#digest May, 2023\n\n\ud83c\udd95 **Added:\n\n**\u25ab\ufe0fNew scripts\/uctl\/uctl console script for administration of the running service was added.\n\n\u2b50\ufe0f **Improved the functionality**:\n\n\u25ab\ufe0fImproved compile times by removing multiple includes from userver headers including templating the serializers of different formats.\n\u25ab\ufe0fImplemented ugrpc::server::HealthComponent handler, a gRPC alternative to [server::handlers::Ping](https:\/\/userver.tech\/d7\/d6d\/classserver_1_1handlers_1_1Ping.html).\n\u25ab\ufe0fgRPC server and clients now support middlewares - a customization plugins that could be shared by different handlers.\n\u25ab\ufe0fInvalid implementations of CacheUpdateTrait::Update are now detected and logged.","923":"Pass an `-s` option to the pytest run.\n\nIn depth description: https:\/\/stackoverflow.com\/questions\/24617397\/how-to-print-to-console-in-pytest","924":"Great job, OK!\nI think you'll also need to fix compilation errors I mentioned above","925":"Hi!\nI have faced such problem. I couldn't find CMake flag for that macros. You can check [template for project ](https:\/\/github.com\/userver-framework\/service_template). I  added necessary CMake flags in Makefile.local and used existing targets in Makefile. Everything works fine now","926":"got it, thank you","927":"\/usr\/local\/opt\/postgresql@14 can you check if this directory exists?","928":"There were no plans for this, but I think it's not difficult to do it by looking at how authorization is implemented now.","929":"By the way, is there any documentation on how coroutines are implemented and scheduled in userver?","930":"In fact I had to reuse all components from `MinimalServerComponents` excluded `DynamicConfigFallback` component because it is conflicting with `DynamicConfigClient\/Updater` which I found a bit confusing and not clear. @antoshkka","931":"Will have to re-try building on GCC now.  :)","932":"file 2:\n\n**dc2.yml\n\n**```version: '3'\n\nservices:\n  servicetwo:\n    image: 'node:16.13.0-bullseye'\n    command: bash -c \"sleep infinity\"\n\nnetworks:\n  default:\n    external: true\n    name: mytestoverlay```","933":"Next question!\nWhat is the correct way to set up environment to build userver on ubuntu 22?\nThis: https:\/\/userver.tech\/d1\/d03\/md_en_userver_tutorial_build.html\nThis: https:\/\/github.com\/userver-framework\/docker-userver-build-base\/blob\/release\/Dockerfile\nOr this: https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/.github\/workflows\/ci.yml#L70\n\n?","934":"I get it, but I think userver does not need the patch to build successfully, the CMake option above is enough","935":"I cloned this template: https:\/\/github.com\/userver-framework\/pg_grpc_service_template\nAnd ran `make docker-cmake-build`","936":"ghcr.io\/userver-framework\/ubuntu-userver-build-base:v1","937":"Hi, I was checking out this project on GitHub. \n\nIs it known who backs the project?","938":"I created PR with up userver\nhttps:\/\/github.com\/userver-framework\/pg_grpc_service_template\/pull\/12\n@AntonyZhilin please.","939":"That's bad, though, this way gtest and gbench are being included in production","940":"Ok so what I did, I built userver using the command `conan create . --build=missing -pr:b=default -o:shared=true`. Everything worked fine, I can see the userver package in conan.\nNext I'm trying to use the template project from here `userver\/conan\/test_package`. Like this:\n```$ mkdir build && cd build && cmake ..```\nAnd I'm getting the error that the userver package is not found.","941":"Thank you","942":"Package managers (conan, vcpkg) is one way to solve the problem with dependencies. Another way is to have a single repository for all your microservices, which is also useful for storing common files, such as common parts of static \/ dynamic config, your deploy scripts, etc.\n\nEither way, we prefer always building userver from source. It negates API issues (\"how to do this with the version of userver that I have in my system?\"), ABI compatibility issues (userver is not ABI-stable). We struggle to keep userver build times minimal, it is currently under 5 minutes with clang, ccache and ltocache. And unless userver files change, the cost of userver in cached builds is practically zero","943":"Hi. As we are talking about the plans. Any plans to add some ORM like architecture? To be able to code like in Django for example.","944":"same error tried both cases","945":"Do you have in plans to add ORM to userver? Like in the python Django or fastapi for example?","946":"Yes, `engine::Promise` can be used from non-coroutine threads","947":"My next question.  Is it possible to pin an Async Task to execute on a particular thread?\n\nIf the task has to interface with non threadsafe legacy code I might have to inspect the args\/params of the task to determine what threat to execute it in","948":"No idea what is used in Yandex Cloud. Try asking that question in thir chat ;-)","949":"I'll try in a bit.\nWhat do I need to try?","950":"Inside that docker image I mean","951":"`mock_grpc_greeter` in this case is an argument of `def greeter_mock` ?","952":"I actually tried it already and it didn't work","953":"Web sockets and web sockets with SSL","954":"Because I think *IF* the driver is going to expand in that fashion, it'd need that at the very least; otherwise, the driver wouldn't know what to do","955":"Interesting, but looking at .psql files it seems to me that database is indeed not created by them. \nWhat happens if you create the database `dynconf_service` via psql, and then apply the .psql files with database specified?\nIt would be `psql -d dynconf_service -f ...`","956":"What would be the best way to run N async tasks and wait for them all, gathering and processing results?","957":"Looks like everything is built and working. Thank you for the help once again. Not sure if it's still good idea to use conan tho","958":"I think what you might be looking for is `server::http::HttpRequest::GetArg()` and `GetPathArg()`. \n\nA usage of this in the DNS client control, config-wise, is here:   https:\/\/github.com\/userver-framework\/userver\/blob\/develop\/samples\/production_service\/static_config.yaml#L48\n\nAnd in code, that is used here: https:\/\/github.com\/userver-framework\/userver\/blob\/3f3fb5b59e2303952fb69d25c93703aef5dd53d2\/core\/src\/server\/handlers\/dns_client_control.cpp#L21","959":"We've improved the diagnostic in that place https:\/\/github.com\/userver-framework\/userver\/commit\/e971629d4518a3678d7ce599997839e5ba175428","960":"And what does this BAGGAGE_SETTINGS mean? And what is the accepted settings for it?","961":"Oh, i see, you have it mapped to a table, not a user type (didn't know it works like that).\nI think you have a couple of options then:\n\n1. `Insert into ... values ($1.field_name, $1.second_field etc. etc.)\n`2. insert from select (don't recall the syntax exactly, smth like `insert into ... from select * from ($1)`)\n3. Remove the mapping - should work without it. And i would recommend not to use `select *` but rather name the fields explicitly, otherwise it gets messy when one adds\/removes columns","962":"I'm afraid submodules\/ExternalProject\/Conan are your only options\n\nSummoning @AntonyZhilin, who should be able to provide a more elaborate answer","963":"Is not it possible to just have default values in the code?","964":"Also, looks like updating userver was not the reason but coincidence . This happened when I integrated dbmate for database migrations. Before dbmate I used plain .sql files with schema and data. But now I switched to dbmate and cannot get my tests working anymore","965":"Sorry, I haven't used the library yet.","966":"`psql -V`","967":"OK. I think that\u2019s part of the confusion. How do opensource users know what bugs are known as being out there?","968":"@AntonyZhilin take a look please ^","969":"That indeed helped. Thanks!","970":"cmake -DCMAKE_BUILD_TYPE=Release ..","971":"look ExternalProject_Add is just downloads and builds the sources according to the provided flow, and just creates a target\n\nif you want to export it somewhere else the you can do like followed example. \n\n\nset(USERVER_INCLUDE_DIRS ${zlib_INSTALL}\/include)\nset(USERVER_LIBRARIES ${zlib_INSTALL}\/lib\/my_lib_name${CMAKE_STATIC_LIBRARY_SUFFIX})\ninclude_directories(${USERVER_INCLUDE_DIRS})\n\n\nfile(MAKE_DIRECTORY \"${USERVER_INCLUDE_DIRS}\")\nadd_library(USERVER::REDIS STATIC IMPORTED)\nset_target_properties(USERVER::REDIS PROPERTIES IMPORTED_LOCATION ${USERVER_LIBRARIES} INTERFACE_INCLUDE_DIRECTORIES ${USERVER_INCLUDE_DIRS})\nadd_dependencies(USERVER::REDIS userver)\n\n`please note paths in my example you need to extract by yourself and put in yout cmake`\n\ncreate a separeate file FindUserver.cmake, put the whole logic there, add include statement wherever you want to use and add `add_dependencies(my_lib userver)`\n\n`NOTE add a find_package statment in the begining to make sure that you are not building the library every thime`","972":"Yes. I have idea write script with different new configs and current values","973":"What happens if dynamic configs service is unavailable during service startup - does it just fail to start?","974":"can you try?","975":"This specific class of problems now probably should be easy to spot. If some static registration didn't occur \u2014 check that you reference some function from the unit where static registrator defined.\nI suppose it is possible to solve all them just by defining all registrators in headers. This will make compilation slightly longer but not sure how much. If that turns out to be a factor then maybe dummy self-referencing in header like in my example, although it's a bit cumbersome.","976":"Nice, glad to help\n\ncc @alexipro that's probably something worth fixing\/noting","977":"userver\/cmake\/FindPython.cmake","978":"Internet search gave the following answer https:\/\/kb.altinity.com\/altinity-kb-setup-and-maintenance\/schema-migration-tools\/","979":"Seems to be just `insert into ... select * from $1`, without additional `from`","980":"Would appreciate it","981":"You will have to create tables yourself.\nThere is no support for schema creation\/migration at the moment.","982":"Now this `POSTGRES_CONNECTION_PIPELINE_EXPERIMENT`","983":"\ud83c\udd95 **Big new features since the Beta announcement:\n**\u25ab\ufe0fImplemented WebSockets server\n\u25ab\ufe0fAdded MySQL driver\n\u25ab\ufe0fRabbitMQ drived was added\n\u25ab\ufe0fImplemented TLS server\n\u25ab\ufe0fEnabled PostgreSQL pipelining\n\u25ab\ufe0fImplemented and enabled Deadline Propagation\n\u25ab\ufe0fImproved experience with metrics. Added Prometheus and Graphite metric formats. Provided a modern simple interface to write and test metrics.\n\u25ab\ufe0fAdded chaos tests for drivers\n\u25ab\ufe0fImplemented streaming API for the HTTP\n\u25ab\ufe0fImproved documentation, added more samples and descriptions, improved search.\n\u25ab\ufe0fNumerous optimizations.\n\u25ab\ufe0fNumerous build improvements, including Conan and Docker support.\n\n**\ud83d\udccc Optimized and improved features that were available at the Beta announcement:\n**\u25ab\ufe0fgRPC client and server\n\u25ab\ufe0fMongo driver\n\u25ab\ufe0fRedis driver\n\u25ab\ufe0fPostgreSQL\n\u25ab\ufe0fHTTP server and client\n\u25ab\ufe0fLogging and Tracing\n\u25ab\ufe0f... and many other features.\n\n\ud83d\udcc4 Detailed descriptions could be found [in changelog](https:\/\/userver.tech\/da\/d9a\/md_en_2userver_2roadmap__and__changelog.html). Announcements on [medium](https:\/\/medium.com\/yandex\/userver-1-0-releasing-a-framework-for-io-bound-programs-7898c275d226) (en) and on [habr](https:\/\/habr.com\/ru\/companies\/yandex\/articles\/760244\/) (ru).","984":"Ok, where can I see an example of how userver was deployed into conan to be used here?","985":"adding everywhere\n`target_link_libraries(${PROJECT_NAME}_objs PUBLIC userver::userver)` instead of userver-core, userver-utest, etc.. helped","986":"ow Nice! It works now, yes!","987":"I will try.\nFor now I came up with this workaround in the CMakeLists.txt\n\n```configure_file(\n    ${CMAKE_CURRENT_LIST_DIR}\/..\/authorization_service\/proto\/auth.proto\n    ${CMAKE_CURRENT_LIST_DIR}\/proto\/auth.proto\n    COPYONLY\n)\ninclude(GrpcTargets)\nadd_grpc_library(${PROJECT_NAME}_auth_proto PROTOS ${CMAKE_CURRENT_LIST_DIR}\/proto\/auth.proto)```\n\nAnd it works. Any other path rather than `${CMAKE_CURRENT_LIST_DIR}\/proto` leads to the error above.","988":"Is anyone using it in a production environment?","989":"There's a way to disable all the downloads and work with local packets only. This mitigates the supply chain attack","990":"already tried","991":"Unfortunately this didn't work. It works if I additionally paste code from bytea.cpp to my handler cpp file, though. I will try to figure out when and why linking decides to cutoff this code from executable.\n(trying debug build in docker with ubuntu 22.04 x64 image)","992":"Are you in the Russia offices or the US offices, Antony?","993":"\"instead of linking to a submodule, the `third_party` would link back to the \/userver build.\"\nI'm curious how you could make this work :)","994":"What build command do you use and what OS do you have?","995":"I don't think that my initial query is correct ( `INSERT INTO table ($1)` ).\nBut we were checking different SQL queries. For example this one `INSERT INTO ... SELECT * FROM $1`.\nAnd it still does not work for some reason","996":"Got it. Thanks once again!","997":"Makes sense! Thanks a lot!!","998":"Nope, you understood me :) \n\nI thought so;   Based on my reading of the code, it ultimately just uses PGsendQueryPrepared, without much it any magic in between;","999":"I gotcha ;)"}}